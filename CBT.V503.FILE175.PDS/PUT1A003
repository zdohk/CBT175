*          DATA SET PUT1A003   AT LEVEL 001 AS OF 02/06/91
*          DATA SET PUT1A003   AT LEVEL 004 AS OF 02/06/91              00001
PUT1A003 TITLE 'PUT1A003  -  COPY TEMPORARY DATA SET INTO SPF MEMBER'   00002
*********************************************************************** 00003
*                                                                     * 00004
*                                                                     * 00005
*        PURPOSE/FUNCTION:                                            * 00006
*                                                                     * 00007
*              1. COPY A 'CARD' DECK FROM A TEMPORARY DATA SET INTO   * 00008
*                 AN SPF LIBRARY, MAINTAINING INTEGRITY BY            * 00009
*                 ENQUEUING ON 'SPFEDIT' /DSNAME                      * 00010
*                 IF NON-REPLACEMENT IS REQUIRED A PARM OF            * 00011
*                 NOREPLACE CAN BE CODED TO CAUSE AN ABEND 11 AND     * 00012
*                 NON-REPLACEMENT IF THE MEMBER ALREADY EXISTS        * 00013
*        OUTPUT:                                                      * 00014
*              PDS MEMBER                                             * 00015
*              DIRECTORY ENTRY                                        * 00016
*                                                                     * 00017
*        RETURN CODES:                                                * 00018
*              0 = NORMAL COMPLETION                                  * 00019
*              4 = SPF LIBRARY DIRECTORY WAS FULL OR DIRECTORY I/O    * 00020
*                  ERROR OCCURRED                                     * 00021
*                                                                     * 00022
*        DATA SETS REQUIRED:                                          * 00023
*              SYSPRINT - DATA SET TO RECEIVE MESSAGES                * 00024
*              SYSUT1 - DATA SET CONTAINING OBJECT DECK               * 00025
*              SYSUT2 - PDS TO RECEIVE OBJECT DECK                    * 00026
*                                                                     * 00027
*                                                                     * 00028
*        REGISTER USAGE:                                              * 00029
*              R12 - BASE REGISTER (RBASE)                            * 00030
*              R13 - SAVE/WORK AREA POINTER (RSAVE)                   * 00031
*                                                                     * 00032
*                                                                     * 00033
*        ABEND CODES:                                                 * 00034
*              2 - SYSPRINT DATA SET WOULD NOT OPEN                   * 00035
*              3 - MEMBER NOT GIVEN ON SYSUT2 DD STATEMENT            * 00036
*              4 - SYSUT1 DATA SET WOULD NOT OPEN                     * 00037
*              5 - SYSUT2 DATA SET WOULD NOT OPEN                     * 00038
*              6 - IMPOSSIBLE RETURN FROM STOW                        * 00039
*                                                                     * 00040
*********************************************************************** 00041
*  CHANGES IN 1991                                                    * 00042
*  JAN 02 - FEB 06 - UPGRADE MOST TAGS TO TAKE ADVANTAGE OF ASSEM H.  * 00043
*                    ADD NOREPLACE OPTION WITH ABEND IF DUPLICATE     * 00044
*                    REMOVE RESERVE SINCE ENQUEUE IS DONE BEFORE OPEN * 00045
*                        AND TESTS CAN CAUSE ABEND                    * 00046
*                    REMOVE USE OF IEFUCBOB AND IEZDEB MACROS SINCE   * 00047
*                        RESERVE NOT USED.                            * 00048
*                                                                     * 00049
*********************************************************************** 00050
         EJECT                                                          00051
*********************************************************************** 00052
*                                                                     * 00053
*              MACRO DEFINITIONS                                      * 00054
*                                                                     * 00055
*********************************************************************** 00056
         MACRO                                                          00057
         XRABEND &N,&DUMP,&STEP                                         00058
XRABEND&N ABEND &N,&DUMP,&STEP                                          00059
         MEND                                                           00060
         EJECT                                                          00061
*********************************************************************** 00062
*                                                                     * 00063
*              REGISTER EQUATES                                       * 00064
*                                                                     * 00065
*********************************************************************** 00066
PUT1A003 CSECT                                                          00067
R0                 EQU  0                                               00068
R1                 EQU  1                                               00069
R2                 EQU  2                                               00070
R3                 EQU  3                                               00071
R4                 EQU  4                                               00072
R5                 EQU  5                                               00073
R6                 EQU  6                                               00074
R7                 EQU  7                                               00075
R8                 EQU  8                                               00076
R9                 EQU  9                                               00077
R10                EQU  10                                              00078
R11                EQU  11                                              00079
R12                EQU  12                                              00080
R13                EQU  13                                              00081
R14                EQU  14                                              00082
R15                EQU  15                                              00083
RPARM              EQU  R1              POINTER TO PARM INFORMATION     00084
RBASE              EQU  R12             BASE REGISTER                   00085
RSAVE              EQU  R13             SAVE/WORK AREA POINTER          00086
         EJECT                                                          00087
*********************************************************************** 00088
*                                                                     * 00089
*              PUT1A003 ENTRY POINT                                   * 00090
*                                                                     * 00091
*********************************************************************** 00092
XR000    STM   R14,R12,12(R13)          SAVE REGISTERS                  00093
         LR    RBASE,R15                SET UP BASE REGISTER            00094
         LR    R2,RPARM                 SAVE PARM ADDRESS               00095
         USING XR000,RBASE                                              00096
         GETMAIN R,LV=XR_WORK_LENGTH    GET CORE FOR SAVE/WORK AREA     00097
         ST    R1,8(0,R13)              LINK BOTH                       00098
         ST    R13,4(0,R1)              SAVEAREAS                       00099
         LR    RSAVE,R1                 GET ADDR OF SAVE/WORK AREA      00100
         USING XRWORK,RSAVE                                             00101
         MVI   XW_REPLACE_SWITCH,C'Y'   SET THE REPLACE SWITCH TO THE   00102
*                                         DEFAULT OF Y (YES-REPLACE)    00103
         L     R1,0(,R2)                GET ADDRESS OF THE PARM AREA    00104
         LH    R3,0(,R1)                IF THE PARM SIZE IS ZERO,       00105
         LTR   R3,R3                      ASSUME THE DEFAULT OF         00106
         BZ    XR_PARM_DONE               REPLACE                       00107
         CH    R3,=H'7'                 IF THE PARM SIZE IS 7 AND THE   00108
         BNE   XR_CHK_NO_REPLACE          PARM IS REPLACE, VALUE IS OK  00109
         CLC   =C'REPLACE',2(R1)          ELSE IF THE SIZE IS 7 IT IS   00110
         BE    XR_PARM_DONE               BAD                           00111
         B     XR_BAD_PARM                                              00112
XR_CHK_NO_REPLACE  DS  0H                                               00113
         CH    R3,=H'9'                 IF THE PARM SIZE ISN'T 9, THE   00114
         BNE   XR_BAD_PARM                PARM IS BAD                   00115
         CLC   =C'NOREPLACE',2(R1)      IF THE PARM ISN'T NOREPLACE     00116
         BNE   XR_BAD_PARM                THE PARM IS BAD               00117
         MVI   XW_REPLACE_SWITCH,C'N'   SET THE REPLACE SWITCH TO N     00118
XR_PARM_DONE       DS 0H                                                00119
         MVI   XW_FLAG_BYTE_2,0         CLEAR FLAGS                     00120
         MVC   XW_MEMBER_NAME,XC_BLANKS INITIALIZE OBJECT DECK ID       00121
         EJECT                                                          00122
*********************************************************************** 00123
*                                                                     * 00124
*              OPEN DATA SETS                                         * 00125
*                                                                     * 00126
*********************************************************************** 00127
         MVC   XW_SYSPRINT_DCB,SYSPRINT INSTALL DCB IN WORKAREA         00128
         LA    R1,XW_SYSPRINT_DCB       GET DCB ADDR                    00129
         ST    R1,XW_DCB_ADDR_LIST      STORE DCB ADDRS IN OPEN PLIST   00130
         OC    XW_DCB_ADDR_LIST,XC_SYSPRT_OPN_LST OR IN FLAG BYTES      00131
         OPEN  MF=(E,XW_DCB_ADDR_LIST)  OPEN LISTING DCBS               00132
         USING IHADCB,R1                                                00133
         LA    R1,XW_SYSPRINT_DCB       GET DCB ADDR                    00134
         TM    DCBOFLGS,X'10'           DID DCB OPEN?                   00135
         BNO   XR_ABEND_WTO_2           BRANCH IF NO - ABEND            00136
         EJECT                                                          00137
*********************************************************************** 00138
*                                                                     * 00139
*              COPY OBJECT DECK TO LIBRARY                            * 00140
*                                                                     * 00141
*********************************************************************** 00142
         MVC   XW_SYSUT1_DCB,SYSUT1     INSTALL DCB IN WORKAREA         00143
         MVC   XW_SYSUT2_DCB,SYSUT2     INSTALL DCB IN WORKAREA         00144
         LA    R0,XW_SYSUT1_DCB         GET DCB ADDR                    00145
         LA    R1,XW_SYSUT2_DCB         GET DCB ADDR                    00146
         STM   R0,R1,XW_DCB_OPN_CLS_LST STORE DCB ADDRS IN OPEN PLIST   00147
         OC    XW_DCB_OPN_CLS_LST,XC_SYSUT2_OPN_LST OR IN FLAG BYTES    00148
         USING IHADCB,R1                                                00149
         LA    R0,XW_DCB_EXIT_LIST      GET ADDR OF DCB EXIT LIST       00150
         O     R0,DCBRECFM              OR IN RECFM BITS                00151
         ST    R0,DCBEXLST              STORE EXIT LIST ADDR / RECFM    00152
         DROP  R1                                                       00153
         LA    R0,XW_JFCB               GET JFCB AREA ADDR              00154
         ST    R0,XW_DCB_EXIT_LIST      STORE JFCB ADDR IN EXIT LIST    00155
         MVI   XW_DCB_EXIT_LIST,X'87'   SET JFCB AREA/END OF LIST BITS  00156
         XC    XW_JFCB,XW_JFCB          ZERO OUT JFCB                   00157
         RDJFCB MF=(E,XW_DCB_OPN_CLS_LST+4) READ IN JFCB                00158
         NC    XW_JFCB,XW_JFCB          IS JFCB STILL ZERO?             00159
         BZ    XR_ABEND_WTO_5           BRANCH IF YES - NO JFCB - ABEND 00160
         CLC   JFCBELNM,XC_BLANKS       MEMBER SPECIFIED?               00161
         BE    XR_ABEND_WTO_3           BRANCH IF NO - ABEND            00162
         MVC   XW_MEMBER_NAME,JFCBELNM  SAVE MEMBER NAME                00163
         NC    JFCBLKSI,JFCBLKSI        IF BLKSIZE NOT ZERO GO TO       00164
         BNZ   XR_ABEND_WTO_7             ABEND7                        00165
         NC    JFCLRECL,JFCLRECL        IF LRECL NOT ZERO GO TO ABEND7  00166
         BNZ   XR_ABEND_WTO_7                                           00167
         CLI   JFCRECFM,X'00'           IF RECFM NOT LOW-VALUE GO TO    00168
         BNZ   XR_ABEND_WTO_8             ABEND8                        00169
         BAL   R14,XR_ENQUEUE_SYSUT2    ENQ ON SYSUT2                   00170
         OPEN  MF=(E,XW_DCB_OPN_CLS_LST) OPEN DCB FOR SYSUT1 & SYSUT2   00171
         USING IHADCB,R6                                                00172
         LA    R6,XW_SYSUT1_DCB         GET DCB ADDR                    00173
         TM    DCBOFLGS,X'10'           DID DCB OPEN?                   00174
         BNO   XRABEND4                 BRANCH IF NO - ABEND            00175
         LA    R6,XW_SYSUT2_DCB         GET DCB ADDR                    00176
         TM    DCBOFLGS,X'10'           DID DCB OPEN?                   00177
         BNO   XR_ABEND_WTO_5           BRANCH IF NO - ABEND            00178
         CLI   XW_REPLACE_SWITCH,C'N'   BYPASS BLDL IF REPLACE ALLOWED  00179
         BNE   XR_GET_SYSUT2_BUF                                        00180
         LA    R15,1                                                    00181
         STH   R15,XW_BLDL_COUNT                                        00182
         LA    R15,74                                                   00183
         STH   R15,XW_BLDL_ENTRY_LEN                                    00184
         BLDL  (R6),XW_BLDL_LIST       DO THE BLDL FOR SYSUT2           00185
         LTR   R15,R15                 IF ENTRY FOUND GO TO ABEND FOR   00186
         BZ    XR_DUPLICATE_ENTRY        DUPLICATE                      00187
         C     R15,=F'4'               IF RETURN CODE IS NOT 4 GO TO    00188
         BNE   XR_BAD_DIRECT_READ         ABEND FOR BAD READ            00189
XR_GET_SYSUT2_BUF  DS  0H                                               00190
         LH    R0,DCBBLKSI              GET SIZE OF A BLOCK             00191
         DROP  R6                                                       00192
         GETMAIN R,LV=(0)               GET BUFFER OF APPROPRIATE SIZE  00193
         ST    R1,XW_SYSUT2_BUF_ADDR    SAVE BUFFER ADDRESS             00194
         BAL   R14,XR_SYSUT2_SET_PTRS   GO SET UP BUFFER POINTERS       00195
         MVC   XW_SYSUT2_DECB,XRWRITE   INSTALL DECB IN WORKAREA        00196
         EJECT                                                          00197
*********************************************************************** 00198
*                                                                     * 00199
*              COPY OBJECT DECK                                       * 00200
*                                                                     * 00201
*********************************************************************** 00202
XR_READ_CARD       DS  0H                                               00203
         BAL   R14,XR_READ_SYSUT1       READ A CARD                     00204
         BAL   R14,XR_WR_SYSUT2_REC WRITE IT OUT                        00205
         B     XR_READ_CARD             LOOP TIL EOF                    00206
         EJECT                                                          00207
*********************************************************************** 00208
*                                                                     * 00209
*              STOW MEMBER IN DIRECTORY                               * 00210
*                                                                     * 00211
*********************************************************************** 00212
XR_END_CARD_RTN    DS  0H                                               00213
         XC    XW_STOW_TTRC,XW_STOW_TTRC CLEAR TTR AND CONTROL BYTE     00214
         OI    XW_FLAG_BYTE_2,XW_CLEAR_BUFFER                           00215
*                                     INDICATE FLUSH OF SHORT BUFFER    00216
         BAL   R14,XR_WR_SYSUT2_REC WRITE IT OUT                        00217
         STOW  XW_SYSUT2_DCB,XW_STOW_ADDR_LIST,R                        00218
*                                       STOW MEMBER NAME/TTR/STAMP      00219
         B     XR_STOW_BRANCH_TBL(R15)  BRANCH ON STOW RETURN CODE      00220
XR_STOW_BRANCH_TBL DS  0H               MEMBER REPLACED                 00221
         B     XR_MEMBER_REPLACED       MEMBER REPLACED                 00222
         B     XR_ABEND_WTO_6           IMPOSSIBLE CONDITION WITH R OPT 00223
         B     XR_MEMBER_ADDED          MEMBER ADDED - NOT FOUND        00224
         B     XR_DIRECTORY_FULL        DIRECTORY FULL                  00225
         B     XR_DIRECTRY_IO_ERR       DIRECTORY I/O ERROR             00226
XR_MEMBER_REPLACED DS  0H               POINT TO MESSAGE                00227
         LA    R2,XC_MEMBR_REPL_MSSG    POINT TO MESSAGE                00228
         LA    R3,L'XC_MEMBR_REPL_MSSG-1 GET MSG LEN MINUS ONE FOR EX   00229
         B     XR_PRINT_MESSAGE         GO PRINT MESSAGES               00230
XR_MEMBER_ADDED    DS 0H                                                00231
         LA    R2,XC_MEMBR_ADD_MSSG POINT TO MESSAGE                    00232
         LA    R3,L'XC_MEMBR_ADD_MSSG-1 GET MSG LEN MINUS ONE FOR EX    00233
         B     XR_PRINT_MESSAGE         GO PRINT MESSAGES               00234
XR_DIRECTORY_FULL  DS  0H               POINT TO MESSAGE                00235
         LA    R2,XC_DIRECT_FUL_MSSG    POINT TO MESSAGE                00236
         LA    R3,L'XC_DIRECT_FUL_MSSG-1 GET MSG LEN MINUS ONE FOR EX   00237
         OI    XW_FLAG_BYTE_2,XW_DIRECTORY_ERROR OBJLIB DIRECTORY ERROR 00238
         B     XR_PRINT_MESSAGE         GO PRINT MESSAGE                00239
XR_DIRECTRY_IO_ERR DS  0H                                               00240
         LA    R2,XC_IO_ERROR_MSSG POINT TO MESSAGE                     00241
         LA    R3,L'XC_IO_ERROR_MSSG-1  GET MSG LEN MINUS ONE FOR EX    00242
         OI    XW_FLAG_BYTE_2,XW_DIRECTORY_ERROR OBJLIB DIRECTORY ERROR 00243
         B     XR_PRINT_MESSAGE         GO PRINT MESSAGE                00244
XR_PRINT_MESSAGE   DS  0H                                               00245
         MVI   XW_PRINT_LINE,C' '       BLANK OUT PRINT LINE            00246
         MVC   XW_PRINT_LINE+1(L'XW_PRINT_LINE-1),XW_PRINT_LINE         00247
         EX    R3,XR_MOVE_BUF_MSSG      MOVE MESSAGE INTO LIST BUFFER   00248
         MVI   XW_PRINT_CTL_CHR,XR_PAGE_EJECT FORCE EJECT ON NEXT WRITE 00249
         MVC   XW_PRINT_LINE+8(8),XW_MEMBER_NAME INSERT OBJECT ID       00250
         BAL   R14,XR_WRITE_PRINT       OUTPUT MESSAGE                  00251
         EJECT                                                          00252
*********************************************************************** 00253
*                                                                     * 00254
*              CLOSE/DEQ OBJECT DATA SETS AND FREE OBJECT BUFFER      * 00255
*                                                                     * 00256
*********************************************************************** 00257
         LA    R1,XW_SYSUT2_DCB         GET DCB ADDRESS                 00258
         USING IHADCB,R1                                                00259
         LH    R0,DCBBLKSI              GET BLOCKSIZE (BUFFER SIZE)     00260
         DROP  R1                                                       00261
         L     R1,XW_SYSUT2_BUF_ADDR    GET BUFFER ADDRESS              00262
         FREEMAIN R,LV=(0),A=(1)        FREE OBJECT BUFFER              00263
         CLOSE MF=(E,XW_DCB_OPN_CLS_LST) CLOSE OBJECT DATA SETS         00264
         DEQ   MF=(E,XW_ENQ_DEQ_WORK)   DEQ ON OBJECT LIBRARY           00265
         FREEPOOL XW_SYSUT1_DCB         FREE BUFFER POOL FOR SYSUT1 DS  00266
         EJECT                                                          00267
*********************************************************************** 00268
*                                                                     * 00269
*              CLOSE LISTING DATA SET                                 * 00270
*                                                                     * 00271
*********************************************************************** 00272
         CLOSE MF=(E,XW_DCB_ADDR_LIST)  CLOSE LISTING DATA SET          00273
         FREEPOOL XW_SYSPRINT_DCB       FREE BUFFER POOL FOR SYSPRINT   00274
         EJECT                                                          00275
*********************************************************************** 00276
*                                                                     * 00277
*              TERMINATION                                            * 00278
*                                                                     * 00279
*********************************************************************** 00280
         L     R2,4(0,RSAVE)            GET PREVIOUS SAVEAREA ADDRESS   00281
         SR    R15,R15                  SET RETURN CODE TO ZERO         00282
         TM    XW_FLAG_BYTE_2,XW_DIRECTORY_ERROR                        00283
*                                      DID OBJLIB PDS DIR ERROR OCCUR?  00284
         BZ    XR_END_JOB_1             BRANCH IF NO - RTN CODE = 0     00285
         LA    R15,4                    YES - RETURN CODE = 4           00286
XR_END_JOB_1       DS  0H               SAVE RTN CODE ACROSS FREEMAIN   00287
         LR    R3,R15                   SAVE RTN CODE ACROSS FREEMAIN   00288
         FREEMAIN R,LV=XR_WORK_LENGTH,A=(RSAVE) FREE SAVE/WORK AREA     00289
         LR    R15,R3                   SET RETURN CODE                 00290
         LR    R13,R2                   SET SAVEAREA ADDRESS            00291
         L     R14,12(0,R13)            GET RETURN ADDRESS              00292
         LM    R0,R12,20(R13)           RESTORE REGISTERS               00293
         BR    R14                      RETURN TO CALLER                00294
         EJECT                                                          00295
*********************************************************************** 00296
*                                                                     * 00297
*              WRITE LISTING DATA SET                                 * 00298
*                                                                     * 00299
*********************************************************************** 00300
XR_WRITE_PRINT     DS  0H                                               00301
         LA    R0,XW_PRINT_LINE         GET ADDRESS OF LISTING BUFFER   00302
         ST    R14,XW_IO_ROUT_RETURN SAVE RETURN ADDRESS                00303
         PUT   XW_SYSPRINT_DCB,(0)      PUT A LINE TO THE LISTING       00304
         L     R14,XW_IO_ROUT_RETURN GET RETURN ADDRESS                 00305
         BR    R14                      RETURN TO CALLER                00306
         EJECT                                                          00307
*********************************************************************** 00308
*                                                                     * 00309
*              READ OBJECT DATA SET                                   * 00310
*                                                                     * 00311
*********************************************************************** 00312
XR_READ_SYSUT1     DS  0H                                               00313
         ST    R14,XW_IO_ROUT_RETURN SAVE RETURN ADDRESS                00314
         GET   XW_SYSUT1_DCB,XW_INP_REC_WORK                            00315
*                                    GET A CARD FROM THE OBJECT DECK    00316
         L     R14,XW_IO_ROUT_RETURN GET RETURN ADDRESS                 00317
         BR    R14                      RETURN TO CALLER                00318
         EJECT                                                          00319
*********************************************************************** 00320
*                                                                     * 00321
*              WRITE OBJECT DATA SET                                  * 00322
*                                                                     * 00323
*********************************************************************** 00324
XR_WR_SYSUT2_REC   DS  0H                                               00325
         ST    R14,XW_IO_ROUT_RETURN SAVE RETURN ADDRESS                00326
         STM   R3,R5,XW_IO_REG_SAVE    SAVE WORK REGISTERS              00327
         LM    R3,R5,XW_BUFFR_REG_SAVE  LOAD BUFFER CONTROL REGISTERS   00328
         TM    XW_FLAG_BYTE_2,XW_CLEAR_BUFFER                           00329
*                                      IS THIS A BUFFER FLUSH CALL?     00330
         BO    XR_WR_SYSUT2_SHORT       BRANCH IF YES                   00331
         MVC   0(L'XW_INP_REC_WORK,R3),XW_INP_REC_WORK                  00332
*                                            MOVE CARD IMAGE TO BUFFER  00333
         BXLE  R3,R4,XR_SYSUT2_FILL_BUFF BRANCH IF NOT END OF BUFFER    00334
         B     XR_WR_SYSUT2_FULL        GO OUTPUT FULL BUFFER           00335
XR_WR_SYSUT2_SHORT DS  0H                                               00336
         S     R3,XW_SYSUT2_BUF_ADDR    GET SIZE OF SHORT BUFFER        00337
         BZ    XR_SET_SYSUT2_REGS       BRANCH IF NOTHING TO FLUSH      00338
         LA    R4,XW_SYSUT2_DCB         GET DCB ADDR                    00339
         USING IHADCB,R4                                                00340
         LH    R5,DCBBLKSI              GET STANDARD BLOCKSIZE          00341
         STH   R3,DCBBLKSI              STORE SHORT BLOCKSIZE           00342
XR_WR_SYSUT2_FULL  DS  0H                                               00343
         L     R3,XW_SYSUT2_BUF_ADDR    POINT TO OUTPUT BUFFER          00344
         WRITE XW_SYSUT2_DECB,SF,XW_SYSUT2_DCB,(R3),MF=E                00345
*                                               WRITE OUT THE BLOCK     00346
         CHECK XW_SYSUT2_DECB           WAIT FOR COMPLETION             00347
         TM    XW_FLAG_BYTE_2,XW_CLEAR_BUFFER                           00348
*                                      IS THIS A BUFFER FLUSH CALL?     00349
         BNO   XR_SYSUT2_FILL_BUFF      BRANCH IF NO                    00350
         NI    XW_FLAG_BYTE_2,X'FF'-XW_CLEAR_BUFFER RESET FLUSH FLAG    00351
         STH   R5,DCBBLKSI              RESET ORIGINAL BLOCKSIZE        00352
         DROP  R4                                                       00353
XR_SYSUT2_FILL_BUFF DS 0H                                               00354
         STM   R3,R5,XW_BUFFR_REG_SAVE  SAVE NEW BUFFER CONTROL REGS    00355
         LM    R3,R5,XW_IO_REG_SAVE    RESTORE WORK REGISTERS           00356
         L     R14,XW_IO_ROUT_RETURN GET RETURN ADDRESS                 00357
         BR    R14                                                      00358
XR_SYSUT2_SET_PTRS DS  0H                                               00359
         STM   R3,R5,XW_IO_REG_SAVE    SAVE WORK REGISTERS              00360
         ST    R14,XW_IO_ROUT_RETURN SAVE RETURN ADDRESS                00361
XR_SET_SYSUT2_REGS DS  0H                                               00362
         L     R3,XW_SYSUT2_BUF_ADDR    GET ADDRESS OF BUFFER           00363
         LA    R4,L'XW_INP_REC_WORK     GET LRECL                       00364
         LR    R5,R3                                                    00365
         USING IHADCB,R14                                               00366
         LA    R14,XW_SYSUT2_DCB        GET DCB ADDR                    00367
         AH    R5,DCBBLKSI              GET END OF BUFFER ADDR          00368
         SR    R5,R4                    POINT TO LAST RECORD IN BUFFER  00369
         DROP  R14                                                      00370
         STM   R3,R5,XW_BUFFR_REG_SAVE  SET BUFFER CONTROL REGISTERS    00371
         LM    R3,R5,XW_IO_REG_SAVE    RESTORE WORK REGISTERS           00372
         L     R14,XW_IO_ROUT_RETURN GET RETURN ADDRESS                 00373
         BR    R14                      RETURN TO CALLER                00374
         EJECT                                                          00375
*********************************************************************** 00376
*                                                                     * 00377
*              ENQ ON SYSUT2 DATA SET                                 * 00378
*                                                                     * 00379
*********************************************************************** 00380
*                                                                       00381
XR_ENQUEUE_SYSUT2  DS  0H                                               00382
         ST    R14,XW_IO_ROUT_RETURN         SAVE RETURN ADDRESS        00383
         MVC   XW_ENQ_DEQ_WORK(XC_ENQ_LIST_LENGTH),XC_ENQUEUE_LIST      00384
*                                      MOVE ENQ LIST TO WORKAREA        00385
         ENQ   (,XW_JFCB),MF=(E,XW_ENQ_DEQ_WORK) ENQ ON SPF DATA SET    00386
XR_ENQUEUE_EXIT    DS  0H                                               00387
         L     R14,XW_IO_ROUT_RETURN         RETURN TO CALLER           00388
         BR    R14                                                      00389
         EJECT                                                          00390
*********************************************************************** 00391
*                                                                     * 00392
*              ABEND ROUTINES                                         * 00393
*                                                                     * 00394
*********************************************************************** 00395
XR_ABEND_WTO_2     DS  0H                                               00396
         WTO   'PUT1A003 - SYSPRINT WILL NOT OPEN '                     00397
         XRABEND 2                      SYSPRINT WOULD NOT OPEN         00398
XR_ABEND_WTO_3     DS  0H                                               00399
         WTO   'PUT1A003 - NO MEMBER NAME FOR SYSUT2'                   00400
         XRABEND 3                      SYSUT2 MEMBER NOT GIVEN         00401
XR_ABEND_WTO_4     DS  0H                                               00402
         WTO   'PUT1A003 - SYSUT1 WILL NOT OPEN'                        00403
         XRABEND 4                      SYSUT1 WOULD NOT OPEN           00404
XR_ABEND_WTO_5     DS  0H                                               00405
         WTO   'PUT1A003 - SYSUT2 WILL NOT OPEN'                        00406
         XRABEND 5                      SYSUT2 WOULD NOT OPEN           00407
XR_ABEND_WTO_6     DS  0H                                               00408
         WTO   'PUT1A003 - BAD RETURN FROM DIRECTORY UPDATE'            00409
         XRABEND 6                      BAD DIRECTORY UPDATE            00410
XR_ABEND_WTO_7     DS  0H                                               00411
         WTO   'PUT1A003 - SYSUT2 JCL BLKSIZE OR LRECL NOT ZERO'        00412
         XRABEND 7                      BLKSIZE OR LRECL IN JCL         00413
XR_ABEND_WTO_8     DS  0H                                               00414
         WTO   'PUT1A003 - SYSUT2 RECFM IN JCL'                         00415
         XRABEND 8                      RECFM IN JCL ABEND              00416
XR_BAD_PARM        DS  0H                                               00417
         WTO   'PUT1A003 - PARM NOT BLANK, REPLACE OR NOREPLACE'        00418
         XRABEND 9                      RECFM IN JCL ABEND              00419
XR_BAD_DIRECT_READ DS  0H                                               00420
         WTO   'PUT1A003 - BAD READ OF DIRECTORY FOR FILE SPECIFIED IN *00421
               SYSUT2'                                                  00422
         XRABEND 10                     RECFM IN JCL ABEND              00423
XR_DUPLICATE_ENTRY DS  0H                                               00424
         WTO   'PUT1A003 - NOREPLACE SPECIFIED, MEMBER ALREADY IN THE L*00425
               IBRARY SPECIFIED BY SYSUT2'                              00426
         XRABEND 11                     DUPLICATE ENTRY ABEND           00427
         EJECT                                                          00428
*********************************************************************** 00429
*                                                                     * 00430
*              CONSTANTS                                              * 00431
*                                                                     * 00432
*********************************************************************** 00433
XC_BLANKS DC   CL8' '                                                   00434
XC_ENQUEUE_QNAME   DC  CL8'SPFEDIT '    QNAME FOR ENQ/DEQ OF OBJ        00435
XC_MEMBR_REPL_MSSG DC  C'MEMBER XXXXXXXX REPLACED IN LIBRARY'           00436
XC_MEMBR_ADD_MSSG  DC  C'MEMBER XXXXXXXX ADDED TO LIBRARY'              00437
XC_DIRECT_FUL_MSSG DC  C'MEMBER XXXXXXXX NOT USABLE - DIRECTORY FULL'   00438
XC_IO_ERROR_MSSG   DC                                                  *00439
               C'MEMBER XXXXXXXX NOT USABLE - DIRECTORY I/O ERROR'      00440
         EJECT                                                          00441
*********************************************************************** 00442
*                                                                     * 00443
*              OPEN/CLOSE, ENQ/DEQ AND WRITE PARAMETER LISTS          * 00444
*                                                                     * 00445
*********************************************************************** 00446
*                                      OPEN LIST FOR LISTING DCBS       00447
XC_SYSPRT_OPN_LST OPEN (0,(OUTPUT)),MF=L                                00448
XC_SYSPRT_OPN_LSTL EQU *-XC_SYSPRT_OPN_LST                              00449
*                                      OPEN LIST FOR OBJECT DCBS        00450
XC_SYSUT2_OPN_LST OPEN (0,(INPUT),0,(OUTPUT)),MF=L                      00451
XC_SYSUT2_OPN_LSTL EQU  *-XC_SYSUT2_OPN_LST                             00452
*              ENQ/DEQ LIST FOR OBJ/XSYM                                00453
XC_ENQUEUE_LIST    ENQ (XC_ENQUEUE_QNAME,0,E,44,SYSTEM),MF=L            00454
XC_ENQ_LIST_LENGTH EQU *-XC_ENQUEUE_LIST                                00455
*              RESERVE LIST                                             00456
XC_RESERVE_LIST    RESERVE (XC_ENQUEUE_QNAME,0,E,44,SYSTEMS),          *00457
               UCB=0,MF=L                                               00458
XC_RESERV_LST_LNGTH EQU *-XC_RESERVE_LIST                               00459
         WRITE XRWRITE,SF,MF=L          WRITE LIST FOR OBJECT DATE SET  00460
XC_SYSUT2_DECB_LNGTH EQU *-XRWRITE                                      00461
         EJECT                                                          00462
*********************************************************************** 00463
*                                                                     * 00464
*              EXECUTED INSTRUCTIONS                                  * 00465
*                                                                     * 00466
*********************************************************************** 00467
XR_MOVE_BUF_MSSG MVC XW_PRINT_LINE+1(0),0(R2)                           00468
*                             MOVE MESSAGE INTO LIST BUFFER             00469
         EJECT                                                          00470
*********************************************************************** 00471
*                                                                     * 00472
*              LITERAL POOL                                           * 00473
*                                                                     * 00474
*********************************************************************** 00475
         LTORG                                                          00476
         EJECT                                                          00477
*********************************************************************** 00478
*                                                                     * 00479
*              DCB FOR WRITING LISTING                                * 00480
*                                                                     * 00481
*********************************************************************** 00482
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,BLKSIZE=121,LRECL=121,         *00483
               MACRF=(PM),RECFM=FM                                      00484
SYSPRINT_DCB_LNGTH EQU *-SYSPRINT                                       00485
         EJECT                                                          00486
*********************************************************************** 00487
*                                                                     * 00488
*              DCB FOR READING OBJECT DECK                            * 00489
*                                                                     * 00490
*********************************************************************** 00491
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,EODAD=XR_END_CARD_RTN,LRECL=80,  *00492
               MACRF=(GM),RECFM=FB                                      00493
SYSUT1_DCB_LENGTH EQU *-SYSUT1                                          00494
         EJECT                                                          00495
*********************************************************************** 00496
*                                                                     * 00497
*              DCB FOR WRITING OBJECT MEMBER                          * 00498
*                                                                     * 00499
*********************************************************************** 00500
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PO,LRECL=80,MACRF=(W),RECFM=FB,     *00501
               EXLST=0                                                  00502
SYSUT2_DCB_LENGTH EQU *-SYSUT2                                          00503
         EJECT                                                          00504
*********************************************************************** 00505
*                                                                     * 00506
*              SAVE/WORK AREA DSECT                                   * 00507
*                                                                     * 00508
*********************************************************************** 00509
XRWORK   DSECT                                                          00510
XW_SAVE_AREA       DS  18F              STANDARD OS SAVEAREA            00511
XW_IO_ROUT_RETURN  DS  F                RTN ADDR FROM I/O ROUTINES      00512
XW_BUFFR_REG_SAVE  DS  3F               OBJLIB BUFFER CONTROL REGISTERS 00513
XW_IO_REG_SAVE     DS  3F               I/O ROUTINE WORKREG SAVEAREA    00514
*                                      LISTING DCBS OPEN/CLOSE LIST     00515
XW_DCB_ADDR_LIST   DS  XL(XC_SYSPRT_OPN_LSTL)                           00516
*                                      OBJECT DCBS OPEN/CLOSE LIST      00517
XW_DCB_OPN_CLS_LST DS  XL(XC_SYSUT2_OPN_LSTL)                           00518
XW_DCB_EXIT_LIST   DS  A                XSYMBOL/SYSUT2 DCB EXIT LIST    00519
XW_SYSUT2_BUF_ADDR DS  A                ADDRESS OF OBJLIB OUTPUT BUFFER 00520
                   DS  0F                                               00521
*                          LIST AREA FOR BLDL SEARCH                    00522
XW_BLDL_LIST       DS  0CL76                                            00523
XW_BLDL_COUNT      DS  H                                                00524
XW_BLDL_ENTRY_LEN  DS  H                                                00525
XW_STOW_ADDR_LIST  DS  0XL12            STOW LIST                       00526
XW_MEMBER_NAME     DS  CL8              OBJECT ID                       00527
XW_STOW_TTRC       DS  XL4              TTR AND CONTROL BYTE            00528
XW_FLAG_BYTE_2     DS  X                SECOND FLAG BYTE                00529
XW_CLEAR_BUFFER    EQU  X'10'           CLEAR OBJLIB SHORT BUFFER       00530
XW_DIRECTORY_ERROR EQU  X'04'           OBJLIB DIRECTORY WAS FULL OR    00531
*                                       DIRECTORY I/O ERROR OCCURRED    00532
                   DS  XL62             USER AREA FOR DIRECTORY ENTRY   00533
*                                                                       00534
                   DS  0F                                               00535
*                                      DECB FOR OBJECT LIBRARY WRITES   00536
XW_SYSUT2_DECB     DS  XL(XC_SYSUT2_DECB_LNGTH)                         00537
                   DS  0F                                               00538
XW_SYSPRINT_DCB    DS  XL(SYSPRINT_DCB_LNGTH) LISTING OUTPUT DCB        00539
                   DS  0F                                               00540
XW_SYSUT1_DCB      DS  XL(SYSUT1_DCB_LENGTH) OBJECT INPUT DCB           00541
                   DS  0F                                               00542
XW_SYSUT2_DCB      DS  XL(SYSUT2_DCB_LENGTH) OBJECT OUTPUT DCB          00543
                   DS  0F                                               00544
XW_JFCB            DS  0XL176           OBJECT JFCB                     00545
         IEFJFCBN LIST=YES                                              00546
XW_INP_REC_WORK    DS  XL80             OBJECT DECK CARD INPUT AREA     00547
*                                      SYSUT2 ENQ/DEQ/RESERVE PARMS     00548
XW_ENQ_DEQ_WORK    DS  XL(XC_RESERV_LST_LNGTH)                          00549
XW_PRINT_LINE      DS  0CL121           LISTING INPUT/OUTPUT AREA       00550
XW_PRINT_CTL_CHR   DS  C                CONTROL CHARACTER               00551
XW_PRINT_DETAIL    DS  CL120            DATA AREA OF PRINT LINE         00552
XW_REPLACE_SWITCH  DS  C                                                00553
XR_PAGE_EJECT      EQU  X'89'           SKIP TO CH1 AFTER PRINTING      00554
XR_WORK_LENGTH     EQU  *-XRWORK                                        00555
         EJECT                                                          00556
*********************************************************************** 00557
*                                                                     * 00558
*              DSECT FOR DCB                                          * 00559
*                                                                     * 00560
*********************************************************************** 00561
         DCBD  DSORG=PS,DEVD=DA                                         00562
         LUT1A001 STAMP='037PUT1A003  02/06/91  9.34.18  '              00563
         END   PUT1A003                                                 00564
