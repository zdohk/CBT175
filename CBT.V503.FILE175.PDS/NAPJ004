++ USERMOD (NAPJ004) .
++ VER (Z038) FMID(HJE2221).
++JCLIN.
//STEP1    EXEC PGM=IEV90
//SYSPUNCH DD  DSN=&&PUNCH(J2XIT05),DISP=SHR
//SYSIN  DD  SYS1.JES2SRC(J2XIT05),DISP=SHR
//STEP2    EXEC PGM=IEWL,PARM='NORENT'
//SYSPUNCH DD  DSN=&&PUNCH(J2XIT05),DISP=SHR
//SYSLMOD  DD  DSN=SYS1.JES2LIB,DISP=SHR
//SYSLIN  DD  *
  INCLUDE SYSPUNCH(J2XIT05)
  NAME J2XIT05(R)
++SRC (J2XIT05) DISTLIB(JES2SRC).
*          DATA SET J2XIT05    AT LEVEL 014 AS OF 10/14/88
*          DATA SET JESXA5     AT LEVEL 001 AS OF 11/20/86              00001**3
* THIS SOFTWARE IS DISTRIBUTED "AS IS" WITH NO WARRANTIES EITHER        00002**3
* EXPRESSED OR IMPLIED. NO GUARANTEES ARE ISSUED WITH THIS              00003**3
* SOFTWARE. BY INSTALLING IT, YOU AGREE NOT TO HOLD ARTHUR              00004**3
* ANDERSEN & CO. RESPONSIBLE FOR ANYTHING THAT MAY OCCUR BY ITS USE.    00005**3
*******************************************************************     00006**3
*                                                                 *     00007**3
*   EXIT5 IS THE JES EXIT TO OVERRIDE OR MODIFY JES COMMAND       *     00008**3
* PROCESSING. IT IS BEING USED TO ADD THE $DD (DISPLAY DISKS)     *     00009**3
* AND $LF (LIST FORMS) COMMANDS, TO VALIDATE THE OPERANDS ON THE  *     00010**3
* $TPRT COMMAMD, AND TO ADD PASSWORD TO SOME COMMANDS.            *     00011**3
*                                                                 *     00012**3
*               R O U T I N E S                                   *     00013**3
*                                                                 *     00014**3
*  MAINLINE:                                                      *     00015**3
*   CHECKS THE COMMAND AGAINST THE TABLE OF COMMANDS. IF IT IS    *     00016**3
* NOT FOUND, THE RC IS SET TO 0 TO ALLOW JES TO EXECUTE IT        *     00017**3
* NORMALLY. IF IT IS FOUND, THE ROUTINE ASSOCIATED WITH IT,       *     00018**3
* IF ANY, IS EXECUTED. IF THE TABLE INDICATES IT HAS A            *     00019**3
* PASSWORD, THE PASSWORD ROUTINE IS CALLED. CONTROL IS RETURNED   *     00020**3
* TO JES WITH THE RC SET BY THE CALLED ROUTINES.                  *     00021**3
*                                                                 *     00022**3
*                                                                 *     00023**3
*                                                                 *     00024**3
*                                                                 *     00025**3
*  $LFRTNE                                                        *     00026**3
*                                                                     * 00027**3
*        THIS ROUTINE CAME FROM ANOTHER FILE ON THE SHARE TAPE.       * 00028**3
*        IT WAS COPIED IN HERE WITHOUT ANY MODIFICATIONS.             * 00029**3
*                                                                     * 00030**3
*        THE $LF COMMAND HAS THE FOLLOWING SYNTAX:                    * 00031**3
*        $L F,J=JN-NN,R=DEST1-DEST2,Q=CLASSES,L/S                     * 00032**3
*                                                                     * 00033**3
*        WHERE:                                                       * 00034**3
*        J=JN-NN       - LIST FORMS FOR THE SPECIFIED JOB(S)          * 00035**3
*        R=DEST1-DEST2 - LIST FORMS FOR THE SPECIFIED DESTINATION(S)  * 00036**3
*        Q=CLASSES       LIST FORMS FOR THE SPECIFIED SYSOUT QUEUE(S) * 00037**3
*                        UP TO 8 SYSOUT CLASSES MAY BE REQUESTED.     * 00038**3
*                        DEFAULTS TO ALL SYSOUT CLASSES.              * 00039**3
*        L/S             USE THE LONG OR SHORT COMMAND RESPONSE       * 00040**3
*                        DEFAULTS TO SHORT 1 LINE RESPONSE.           * 00041**3
*                                                                     * 00042**3
*        WRITTEN BY:                                                  * 00043**3
*                        JOHN V. HOOPER                               * 00044**3
*                        NORTHWESTERN BANK                            * 00045**3
*                        P.O. BOX 310                                 * 00046**3
*                        NORTH WILKESBORO, N.C. 28674                 * 00047**3
*                                                                     * 00048**3
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           * 00049**3
*                                                                     * 00050**3
*        1)  THE HASP900 MESSAGE WILL BE ISSUED FOR EACH OUTPUT       * 00051**3
*            GROUP WHICH MATCHES THE SELECTION CRITERIA.              * 00052**3
*                                                                     * 00053**3
*        $HASP900 JJJJJJJJ JOBNNNN RRRRRRRR Q=X F=FFFF NNNNNNNNN      * 00054**3
*        $HASP900                  C=CCCC T=TTTT O=OOOO B=B HHHH      * 00055**3
*                                                                     * 00056**3
*            A)  JJJJJJJJ   - JOBNAME                                 * 00057**3
*            B)  JOBNNNN    - JOB NUMBER                              * 00058**3
*            C)  RRRRRRRR   - ROUTING (DESTINATION)                   * 00059**3
*            D)  X          - SYSOUT QUEUE                            * 00060**3
*            E)  FFFF       - SYSOUT FORM                             * 00061**3
*            F)  NNNNNNNNNN - TOTAL NUMBER OF PRINT LINES FOR GROUP   * 00062**3
*            G)  CCCC       - SYSOUT FCB                              * 00063**3
*            H)  TTTT       - SYSOUT UCS                              * 00064**3
*            I)  OOOO       - SYSOUT OVERLAY                          * 00065**3
*            J)  B          - 3800 BURST INDICATOR (Y/N)              * 00066**3
*            K)  HHHH       - HOLD INDICATOR (HOLD/    )              * 00067**3
*                                                                     * 00068**3
*                                                                     * 00069**3
*        2)  THE HASP919 MESSAGE WILL BE ISSUED WHEN NO OUTPUT        * 00070**3
*            GROUP MATCHES THE SELECTION CRITERIA.                    * 00071**3
*                                                                     * 00072**3
*        $HASP919 NO OUTPUT QUEUED                                    * 00073**3
*                                                                     * 00074**3
*                                                                     * 00075**3
*        3)  THE HASP950 MESSAGE WILL BE ISSUED WHEN AN INVALID       * 00076**3
*            OPERAND KEYWORD OR VALUE IS DETECTED.                    * 00077**3
*                                                                     * 00078**3
*        $HASP950 ......... INVALID OPERAND                           * 00079**3
*                                                                     * 00080**3
*                                                                     * 00081**3
*  TSTPWD                                                             * 00082**3
*   CHECK THE LAST OPERAND STARTS PWD=. IF NOT, ISSUE THE             * 00083**3
* MESSAGE PLEASE REENTER THE COMMAND WITH THE PASSWORD. SET THE       * 00084**3
* RC TO 16 FOR JES TO ABEND THE COMMAND. IF IT IS FOUND, COMPARE IT   * 00085**3
* TO THE ONE IN THE TABLE. IF THEY ARE DIFFERENT, ISSUE THE           * 00086**3
* MESSAGE INVALID PASSWORD AND SET THE RC TO 16. IF THEY ARE          * 00087**3
* CORRECT, CLEAR THE PWD= FROM THE COMMAND SO JES WILL NOT SEE IT.    * 00088**3
* LEAVE THE RETURN CODE UNCHANGED FROM THE PREVIOUS ROUTINE'S CALL.   * 00089**3
*                                                                     * 00090**3
*                                                                     * 00091**3
*                                                                     * 00092**3
* REGISTER USAGE:                                                     * 00093**3
*                                                                     * 00094**3
*     ENTRY       MAINLINE      $DDRTNE  $TPRT   $LFRTNE   TSTPWD     * 00095**3
* R0             |             |        |MSGLEN |WORK     |MSGLEN     * 00096**3
*                |             |        |       |         |           * 00097**3
* R1             |             |        |       |WORK     |           * 00098**3
*                |             |        |       |         |           * 00099**3
* R2             |INCR IN TABLE|UCB     |       |WORK     |           * 00100**3
*                |             |        |       |         |           * 00101**3
* R3             |END OF TABLE |        |       |CURR OP  |           * 00102**3
*                |             |        |       |         |           * 00103**3
* R4             |             |CVT     |       |WORK     |           * 00104**3
*                |             |        |       |         |           * 00105**3
* R5  PTR TO CURR|PTR TO CURR)-|--------|-------|---------|---->      * 00106**3
*     OPERAND PTR| OPERAND   ) |        |       |         |           * 00107**3
* R6  INCR OF 4  |             |        |PTR TO |INCR     |PTR TO     * 00108**3
*                |             |        |OP PTR |         |OP PTR     * 00109**3
* R7  ADDR OF )--|-------------|--------|-------|---------|---->      * 00110**3
*     LAST OP.)  |             |        |       |         |           * 00111**3
* R8             | BALR REG ---|--------|-------|---------|---->      * 00112**3
*                |             |        |       |         |           * 00113**3
* R9  BASE REG)--|-------------|--------|-------|---------|---->      * 00114**3
*                |             |        |       |         |           * 00115**3
* R10            | PTR TO      |        |       |         | PTR TO    * 00116**3
*                | CMD TABLE   |        |       |         | CMD TABLE * 00117**3
* R11 HCT)-------|-------------|--------|-------|---------|---->      * 00118**3
*                |             |        |       |         |           * 00119**3
* R12            | ADDR OF RTNE|        |       |         |           * 00120**3
*                | TO CALL     |        |       |         |           * 00121**3
* R13 PCE)-------|-------------|--------|-------|---------|---->      * 00122**3
*                |             |        |       |         |           * 00123**3
* R14 RETURN ADDR|             | WORK   |       | WORK    |           * 00124**3
*                |             |        |       |         |           * 00125**3
* R15 ENTRY POINT| RC          |RC=0,8  |RC=0,16|RC=0,8   |RC=UNCHGED * 00126**3
*                |             |        |       |         | OR 16     * 00127**3
*                                                                     * 00128**3
*                                                                     * 00129**3
*                                                                     * 00130**3
*  JES FIELDS USED:                                                   * 00131**3
*                                                                     * 00132**3
*   COMPNTER HAS FULLWORD POINTERS TO THE OPERANDS IN THE         *     00133**3
*     COMMAND                                                     *     00134**3
*   COMMAND CONTAINS THE COMMAND ON ENTRY, EITHER THE COMMAND     *     00135**3
*     OR THE ERROR MESSAGE ON EXIT                                *     00136**3
*******************************************************************     00137**3
         PRINT  ON                                                      00138**3
         EJECT                                                          00139**3
*     MACRO TO BUILD ROUTINE AND PASSWORD TABLE                         00140**3
         MACRO                                                          00141**3
&NAME    TABENT &CLEN,&CMD,&RTN=,&PWD=                                  00142**3
.GETRTN  AIF   ('&RTN' EQ '').NORTN                                     00143**3
&NAME    DC    A(&RTN)            ADDRESS OF ROUTINE                    00144**3
         AGO   .GETPWD                                                  00145**3
.NORTN   DC    A(0)               NO ROUTINE                            00146**3
.GETPWD  ANOP                                                           00147**3
         DC    X'0&CLEN'          LENGTH OF CMD                         00148**3
         AIF   ('&PWD' EQ '').NOPWD                                     00149**3
         DC    X'80'              PWD ON                                00150**3
         DC    CL4'&PWD'          PASSWORD                              00151**3
         AGO   .CMD                                                     00152**3
.NOPWD   DC    X'00'              PWD OFF                               00153**3
         DC    CL4' '             NO PASSWORD                           00154**3
.CMD     ANOP                                                           00155**3
         DC    CL8'&CMD'          COMMAND                               00156**3
         MEND                                                           00157**3
         EJECT                                                          00158**3
         EJECT                                                          00159**3
         COPY  $HASPGBL                                                 00160**3
J2XIT05  $MODULE CVT,UCB,$BUFFER,$PCE,$JQE,$LRC,$JOE,$COMWORK,$JCT,    X00161**7
               $CMB,$HCT,$MIT,$HASPEQU,RPL,                            X00162**3
               $CAT,RESPA,$TRP,$RAT,$JOT,$JOE,                         X00163**3
               SYSP=(GEN,GEN,DATA,GEN,GEN)                              00164**3
J2XIT05  AMODE 31                                                       00165*14
J2XIT05  RMODE 24                                                       00166*14
         PRINT  ON                                                      00167**3
         TITLE 'EXIT 5 FOR $LF COMMAND AND OTHERS '                     00168**5
         EJECT                                                          00169**3
J2XIT05E $ENTRY BASE=R9                                                 00170**6
         $SAVE                                                          00171**3
         LR    R9,R15                                                   00172**3
         SPACE 1                                                        00173**3
*        $AMODE 31                                                      00174**4
         SPACE 1                                                        00175**3
         B     MAIN                                                     00176**3
         EJECT                                                          00177**3
ENT1      DS    1A                                                      00178**3
          DC    A(0)                                                    00179**3
          DC    F'0'                                                    00180**3
          DC    X'07'                                                   00181**3
          DC    X'00'                                                   00182**3
          DC    H'11'                                                   00183**3
          DC    CL11' '                                                 00184**3
         SPACE 2                                                        00185**3
ENT2      DS    1A                                                      00186**3
          DC    A(0)                                                    00187**3
          DC    F'0'                                                    00188**3
          DC    X'12'                                                   00189**3
          DC    X'00'                                                   00190**3
          DC    H'18'                                                   00191**3
         EJECT                                                          00192**3
MAINRTNE DC    C'MAIN ROUTINE'                                          00193**3
         SPACE  3                                                       00194**3
MAIN     DS    0H                                                       00195**3
         XR    R12,R12            CLEAR LENGTH REG                      00196**3
*                                 SET UP FOR BXLE                       00197**3
         LA    R3,ENDTBL-4        COMPARE TO END OF TABLE               00198**3
         LA    R2,20              INCR OF TABLE ENTRY                   00199**3
         LA    R10,CMDTBL         START OF TABLE                        00200**3
         SPACE 3                                                        00201**3
FNDCMD   IC    R12,4(R10)         GET LENGTH TO COMPARE-1               00202**3
         EX    R12,CMDCMP         EXECUTE CLC BETWEEN CMD AND TABLE     00203**3
         BNE   FNDCMDX            NOT IT, CHECK NEXT ENTRY              00204**3
         SPACE 1                                                        00205**3
*                                 THIS IS THE CMD, CHECK FOR PWD        00206**3
         XR    R15,R15            INITIALIZE RC                         00207**3
         CLI   5(R10),X'80'       PWD FLAG?                             00208**3
         BNE   CALLRTN            NO, CALL ROUTINE                      00209**3
         BAL   R8,TSTPWD          CALL PWD ROUTINE                      00210**3
         LTR   R15,R15            PWD OK?                               00211**3
         BNZ   FINISH             NO, SKIP ROUINE CALL                  00212**3
CALLRTN  L     R12,0(R10)         GET RTN ADDR AND PWD FLAG             00213**3
         LTR   R12,R12            ANY RTN?                              00214**3
         BZ    FINISH             NO, ALL DONE                          00215**3
         SPACE 1                                                        00216**3
         BALR  R8,R12             BRANCH TO ROUTINE IN TABLE            00217**3
         SPACE 2                                                        00218**3
         B     FINISH             DONE WITH CMD                         00219**3
         SPACE 2                                                        00220**3
*                                 NOT THIS TABLE ENTRY                  00221**3
FNDCMDX  DS    0H                                                       00222**3
         BXLE  R10,R2,FNDCMD      CHECK NEXT ENTRY                      00223**3
         SPACE 3                                                        00224**3
*                                 FALLEN THROUGH - NOT IN TABLE         00225**3
ENDMAIN  DS    0H                                                       00226**3
         LA    R15,0              PROCESS NORMALLY                      00227**3
         SPACE  3                                                       00228**3
FINISH   $RETURN  RC=(R15)        RETURN TO JES2.                   DDC 00229**3
         EJECT                                                          00230**3
CMDCMP   CLC   COMMAND+1(1),10(R10) EXECUTE FORM OF CLC                 00231**3
         SPACE 3                                                        00232**3
*                                 COMMAND AND PASSWORD TABLE            00233**3
*        FORMAT OF TABENT MACRO:                                        00234**3
*        TABENT COMMAND LENGTH-1(EXCLUDING $),                          00235**3
*        COMMAND (EXCLUDING $)                                          00236**3
*        RTN=ROUTINE NAME, IF ANY,                                      00237**3
*        PWD=PASSWORD, IF ANY                                           00238**3
CMDTBL   DS    0F                                                       00239**3
*        TABENT 1,DD,RTN=$DDRTNE                                        00240**4
         TABENT 1,LF,RTN=$LFRTNE                                        00241**3
*        TABENT 1,TI,PWD=GUESS                                          00242**9
ENDTBL   DS  0H                                                         00243**3
         SPACE 3                                                        00244**3
         LTORG                                                          00245**3
         EJECT                                                          00246**3
*********************************************************************** 00247**3
*                                                                     * 00248**3
*   TSTPWD:                                                           * 00249**3
*                                                                     * 00250**3
* CHECK IF PASSWORD CODED, AND IF IT IS CORRECT. IF NOT, ISSUE        * 00251**3
* THE PASSWORD MISSING OR INVALID PASSWORD MESSAGE AND SET THE        * 00252**3
* RC TO 16 SO COMMAND NOT EXECUTED.                                   * 00253**3
*                                                                     * 00254**3
*********************************************************************** 00255**3
TSTPWD   DS    0H                                                       00256**3
         L     R7,0(R7)           POINT TO LAST OPERAND POINTER         00257**3
         CLC   0(4,R7),=C'PWD='   IS THE LAST OPERAND PWD=?             00258**3
         BNE   PWDNONE            NO, GO TO PASSWORD MISSING RTN        00259**3
         SPACE 3                                                        00260**3
         CLC   4(4,R7),6(R10)     COMPARE PWD TO TABLE PASSWORD         00261**3
         BE    PWDCLR             CORRECT, CLEAR IN CMD, PASS TO IBM    00262**3
         SPACE 2                                                        00263**3
         MVC   COMMAND(16),PWDWRONG SET UP PASSWORD WRONG MESSAGE       00264**3
         L     R0,=F'16'          AND ITS LENGTH                        00265**3
         $STORE R0                SAVE FOR $RETURN                      00266**3
         L     R15,=F'16'         SET UP RC TO ABEND CMD                00267**3
         B     PWDEND             AND EXIT ROUTINE                      00268**3
         SPACE 3                                                        00269**3
PWDCLR   DS    0H                 CLEAR PWD FROM CMD                    00270**3
         MVC   4(4,R7),=C'    '   BLANK OUT PASSWORD                    00271**3
         SPACE 1                                                        00272**3
         LA    R6,COMPNTER        POINT TO OPERAND POINTER              00273**3
         SPACE 1                                                        00274**3
CHECKNXT LR    R5,R6              SAVE LAST OPERAND LOOKED AT           00275**3
         LA    R6,4(R6)           POINT TO NEXT OPERAND POINTER         00276**3
         C     R7,0(R6)           IS THIS THE LAST OPERAND POINTER?     00277**3
         BNE   CHECKNXT           NO, CHECK ANOTHER                     00278**3
*                                 YES, THEN R5 POINTS TO IT             00279**3
         SPACE 2                                                        00280**3
         LR    R7,R5              PUT IN LAST OPERAND POINTER           00281**3
         $STORE R7 SAVE FOR $RETURN                                     00282**3
         B     PWDEND             LEAVE ROUTINE                         00283**3
         SPACE 3                                                        00284**3
PWDNONE  MVC   COMMAND(44),PWDMISS PUT IN MISSING PWD MSG               00285**3
         L     R0,=F'44'          AND LENGTH                            00286**3
         $STORE R0                SAVE FOR $RETURN                      00287**3
         L     R15,=F'16'         RC TO ABEND CMD                       00288**3
         B     PWDEND             LEAVE ROUTINE                         00289**3
         SPACE 3                                                        00290**3
PWDEND   BR    R8                 RETURN                                00291**3
         LTORG                                                          00292**3
         EJECT                                                          00293**3
         EJECT                                                          00294**3
$LFSAVE  DS    F                                                        00295**3
$LFBEG   DC    C'$LF ROUTINE BEGINNING'                                 00296**3
$LFRTNE  DS    0H                                                       00297**3
         ST    R8,$LFSAVE                                               00298**3
         EJECT                                                          00299**3
*********************************************************************** 00300**3
*                                                                     * 00301**3
*        CLEAR THE COMMAND WORK AREA                                  * 00302**3
*                                                                     * 00303**3
*********************************************************************** 00304**3
         SPACE 1                                                        00305**3
         XC    $LFWORK(WORKLEN),$LFWORK CLEAR WORK AREA                 00306**3
         SPACE 3                                                        00307**3
*********************************************************************** 00308**3
*                                                                     * 00309**3
*        GET THE DEFAULT ROUTE CODE FOR $LF                           * 00310**3
*                                                                     * 00311**3
*********************************************************************** 00312**3
GETROUT  L     R1,COMJROUT         LOAD COMMAND ROUTE CODE              00313**3
         TM    COMFLAG,CMBFLAGW    IS THIS A RJE                        00314**3
         BNO   GETROUTE            NO, BRANCH                           00315**3
         CLM   R1,B'1100',$OWNNODE IS THIS OUR NODE AND RJE             00316**3
         BNE   GETROUTE            NO, BRANCH                           00317**3
         LH    R1,COMJRMT          LOAD THE REMOTE NUMBER               00318**3
         BCTR  R1,0                MAKE NUMBER RELATIVE TO ZERO         00319**3
         MH    R1,=Y(RATTLE)       MULTIPLY BY RAT LENGTH FOR OFFSET    00320**3
         AL    R1,$RATABLE         POINT TO RAT ENTRY FOR THIS RJE      00321**3
         L     R1,RATROUTE-RAT(,R1) PICK UP PROPER ROUTINE              00322**3
GETROUTE ST    R1,LOWROUT          SET DEFAULT LOW ROUTE CODE           00323**3
         ST    R1,HIGHROUT         AND HIGH ROUTE CODE                  00324**3
*********************************************************************** 00325**3
*                                                                     * 00326**3
*        GET THE DEFAULT JOB RANGE FOR $LF                            * 00327**3
*                                                                     * 00328**3
*********************************************************************** 00329**3
GETJRNG  SLR   R1,R1               SET DEFAULT LOW JOB NUMBER           00330**3
         STH   R1,LOWJOB           SAVE LOW JOB NUMBER                  00331**3
         LH    R1,$NUMJBNO         SET DEFAULT HIGH JOB NUMBER          00332**3
         STH   R1,HIGHJOB          SAVE HIGH JOB NUMBER                 00333**3
         MVI   JTYPE,C'*'          SET TO DISPLAY ALL JOB TYPES         00334**3
*********************************************************************** 00335**3
*                                                                     * 00336**3
*        SET THE DEFAULT JOB OUTPUT CLASS AND CMD FORMAT              * 00337**3
*                                                                     * 00338**3
*********************************************************************** 00339**3
         MVI   OUTCLASS,C'*'       SET TO ALL CLASSES                   00340**3
         MVI   FORMAT,C'S'         SET TO SHORT FORM OF COMMAND         00341**3
         MVI   MISCSW,X'00'        ZERO THE MISCELLANEOUS SWITCHES      00342**3
         MVC   SAVEFORM,=CL8' '    BLANK OUT SAVE FORM                  00343**8
         MVC   NAMEPRFX,=CL8' '    BLANK OUT NAME PREFIX                00344**9
         EJECT                                                          00345**3
*********************************************************************** 00346**3
*                                                                     * 00347**3
*        EXAMINE THE COMMAND OPERANDS                                 * 00348**3
*                                                                     * 00349**3
*********************************************************************** 00350**3
CLFNSPEC BXH   R5,R6,CLFOK         IF NO MORE EXIT                      00351**3
         L     R1,0(,R5)           POINT TO OPERAND                     00352**3
         CLC   0(2,R1),=C'F='      FORM   SELECTION?                    00353**8
         BE    CLFF                YES, BRANCH                          00354**8
         CLC   0(2,R1),=C'J='      JOB(S) SELECTION?                    00355**8
         BE    CLFJ                YES, BRANCH                          00356**8
         CLC   0(2,R1),=C'R='      RJE(S) SELECTION?                    00357**3
         BE    CLFR                YES, BRANCH                          00358**3
         CLC   0(2,R1),=C'Q='      SYSOUT CLASS SELECTION?              00359**3
         BE    CLFQ                YES, BRANCH                          00360**3
         CLC   0(2,R1),=C'L '      LONG FORM OF COMMAND DESIRED?        00361**3
         BE    CLFORM              YES, BRANCH                          00362**3
         CLC   0(2,R1),=C'L,'      LONG FORM OF COMMAND DESIRED?        00363**3
         BE    CLFORM              YES, BRANCH                          00364**3
         CLC   0(2,R1),=C'S '      SHORT FORM OF COMMAND DESIRED?       00365**3
         BE    CLFORM              YES, BRANCH                          00366**3
         CLC   0(2,R1),=C'S,'      SHORT FORM OF COMMAND DESIRED?       00367**3
         BE    CLFORM              YES, BRANCH                          00368**3
         B     BADOPRND            ERROR EXIT                           00369**3
         EJECT                                                          00370**3
*********************************************************************** 00371**3
*                                                                     * 00372**3
*        PROCESS THE JOB (J) RANGE OR NAME PREFIX SUBPARAMETER        * 00373**9
*                                                                     * 00374**3
*********************************************************************** 00375**3
         SPACE 1                                                        00376**3
CLFJ     DS    0H                                                       00377**3
         L     R1,0(R5)            POINT TO OPERAND                     00378**3
         SLR   R15,R15             SET LENGTH TO ZERO                   00379**3
         CLI   2(R1),C'*'          IS IT *JOB-NAME PREFIX               00380*13
         BE    CLFJ5                                                    00381**9
         LA    R1,3(R1)            INDEX PAST 'J=J'  ETC                00382**9
         LR    R14,R1              SAVE START OF OPERAND                00383**3
         MVI   LOWJOB,X'FF'        SET START OF PROCESSING INDICATOR    00384**3
CLFJ1    CLI   0(R1),C'-'          END OF FIRST OPERAND                 00385**3
         BE    CLFJ2               YES, BRANCH                          00386**3
         CLI   0(R1),C','          END OF ALL OPERANDS                  00387**3
         BE    CLFJ2               YES, BRANCH                          00388**3
         CLI   0(R1),C' '          END OF ALL OPERANDS                  00389**3
         BE    CLFJ2               YES, BRANCH                          00390**3
         CLI   0(R1),C'0'          NUMERIC OPERAND                      00391**3
         BL    BADOPRND            NO, ERROR                            00392**3
         CLI   0(R1),C'9'          NUMERIC OPERAND                      00393**3
         BH    BADOPRND            NO, ERROR                            00394**3
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR JOB NUMBER    00395**3
         LA    R15,1(,R15)         ADD 1 TO OPERAND LENGTH              00396**3
         B     CLFJ1               LOOP UNTIL DONE                      00397**3
CLFJ2    LTR   R15,R15             TEST LENGTH                          00398**3
         BZ    BADOPRND            ZERO, ERROR                          00399**3
         BCTR  R15,0               MAKE MACHINE LENGTH                  00400**3
         EX    R15,PACKJOB         PACK JOB NUMBER                      00401**3
         CVB   R15,$DOUBLE         CONVERT TO BINARY                    00402**3
         C     R15,=F'20000'       SEE IF NUMBER TOO LARGE              00403**3
         BH    BADOPRND            YES, ERROR                           00404**3
         CLI   0(R1),C'-'          LOW JOB OF RANGE                     00405**3
         BE    CLFJ3               YES, BRANCH                          00406**3
         STH   R15,HIGHJOB         SAVE HIGH JOB NUMBER                 00407**3
         CLI   LOWJOB,X'FF'        IS THIS THE FIRST JOB NUMBER         00408**3
         BNE   CLFJ4               NO, ALL DONE WITH NUMBER, BRANCH     00409**3
         STH   R15,LOWJOB          SAVE LOW JOB NUMBER                  00410**3
         B     CLFJ4               ALL DONE WITH NUMBER, BRANCH         00411**3
CLFJ3    CLI   LOWJOB,X'FF'        HAS LOW JOB NUMBER ALREADY BEEN PROC 00412**3
         BNE   BADOPRND            YES, ERROR                           00413**3
         STH   R15,LOWJOB          SAVE LOW JOB NUMBER                  00414**3
         LA    R1,1(,R1)           INCREMENT PAST '-'                   00415**3
         LR    R14,R1              SAVE START OF OPERAND                00416**3
         SLR   R15,R15             RESET LENGTH TO ZERO                 00417**3
         B     CLFJ1               LOOP FOR NEXT NUMBER OF RANGE        00418**3
PACKJOB  PACK  $DOUBLE,0(0,R14)    PACK JOB NUMBER                      00419**3
         SPACE 1                                                        00420**3
CLFJ4    L     R15,0(,R5)          POINT TO OPERAND                     00421**3
         MVC   JTYPE,2(R15)        SET JOB TYPE                         00422**3
         CLI   2(R15),C'J'         JOB?                                 00423**3
         BE    CLFNSPEC            YES, GET NEXT SPECIFICATION          00424**3
         CLI   2(R15),C'S'         STC?                                 00425**3
         BE    CLFNSPEC            YES, GET NEXT SPECIFICATION          00426**3
         CLI   2(R15),C'T'         TSU?                                 00427**3
         BNE   BADOPRND            NO, ERROR                            00428**3
         B     CLFNSPEC            GET NEXT SPECIFICATION               00429**3
CLFJ5    DS    0H                  ROUTINE FOR JOB NAME SEARCH          00430**9
         CLI   3(R1),C','          IS THE CHARACTER A COMMA             00431**9
         BE    CLFJ9               YES, GO MOVE THE ENTRY               00432**9
         CLI   3(R1),C' '          IS THE CHARACTER A SPACE             00433**9
         BE    CLFJ9               YES, GO MOVE THE ENTRY               00434**9
         CLI   3(R1),C'A'          IS THE CHARACTER AN A                00435**9
         BL    CLFJ6               LESS THAN, GO CHECK NATIONAL         00436**9
         CLI   3(R1),C'I'          IS THE CHARACTER AN I                00437**9
         BNH   CLFJ7               EQUAL TO, OR LESS THAN, GO INCR      00438**9
         CLI   3(R1),C'J'          IS THE CHARACTER AN J                00439**9
         BL    BADOPRND            LESS THAN, ERROR                     00440**9
         CLI   3(R1),C'R'          IS THE CHARACTER AN R                00441**9
         BNH   CLFJ7               EQUAL TO, OR LESS THAN, GO INCR      00442**9
         CLI   3(R1),C'S'          IS THE CHARACTER AN S                00443**9
         BL    BADOPRND            LESS THAN, ERROR                     00444**9
         CLI   3(R1),C'Z'          IS THE CHARACTER A Z                 00445**9
         BNH   CLFJ7               EQUAL TO, OR LESS THAN, GO INCR      00446**9
         CLI   3(R1),C'0'          IS THE CHARACTER A 0                 00447**9
         BL    BADOPRND            LESS THAN, ERROR                     00448**9
         CLI   3(R1),C'9'          IS THE CHARACTER A 9                 00449**9
         BNH   CLFJ7               EQUAL TO, OR LESS THAN, GO INCR      00450**9
         B     BADOPRND            ERROR                                00451**9
CLFJ6    DS    0H                                                       00452**9
         CLI   3(R1),C'@'          IS THE CHARACTER AN AT SIGN          00453**9
         BE    CLFJ7               EQUAL, GO INCR                       00454**9
         CLI   3(R1),C'#'          IS THE CHARACTER A POUND SIGN        00455**9
         BE    CLFJ7               EQUAL, GO INCR                       00456**9
         CLI   3(R1),C'$'          IS THE CHARACTER A DOLLAR SIGN       00457**9
         BNE   BADOPRND            ERROR                                00458**9
CLFJ7    DS    0H                                                       00459**9
         LA    R1,1(,R1)           INCREMENT POINTER                    00460**9
         LA    R15,1(,R15)         INCREMENT SIZE FIELD                 00461**9
         CH    R15,=H'8'           IS FIELD 8                           00462*11
         BNH   CLFJ5               EQUAL OR LESS, GO TO LOOP            00463**9
         B     BADOPRND            ERROR                                00464**9
CLFJ9    DS    0H                                                       00465**9
         LTR   R15,R15             TEST LENGTH                          00466*13
         BZ    BADOPRND            ZERO, ERROR                          00467*13
         L     R14,0(,R5)          POINT TO BEGINNING OF OPERAND        00468**9
         CLI   3(R14),C'0'         IS FIRST CHR NUMERIC                 00469*13
         BNL   BADOPRND            YES, ERROR                           00470*13
         BCTR  R15,R0              SET MACHINE LENGTH                   00471**9
         STC   R15,CMPRSIZ         SAVE COMPARE SIZE                    00472**9
         EX    R15,MOVEPRFX        EXECUTE MOVE OF NAME PREFIX          00473**9
         LA    R1,3(,R1)           POINT TO DELIMITER                   00474**9
         B     CLFNSPEC            GET NEXT SPECIFICATION               00475**9
MOVEPRFX MVC   NAMEPRFX(0),3(R14)  MOVE NAME PREFIX                     00476**9
         EJECT                                                          00477**3
*********************************************************************** 00478**3
*                                                                     * 00479**3
*        PROCESS THE ROUTE CODE (R) SUBPARAMETER                      * 00480**3
*                                                                     * 00481**3
*                                                                     * 00482**3
*                                                                     * 00483**3
*    RANGES ALLOWED  -    ONLY ASCENDING RANGES ARE PERMITTED         * 00484**3
*    --------------                                                   * 00485**3
*    NNNNNRNNNN (-RMMMM)                                              * 00486**3
*    NNNN.RNNNN (-RMMMM)                                              * 00487**3
*    NAME.RNNNN (-RMMMM)                                              * 00488**3
*                      -  RANGE OF REMOTES AT A GIVEN NODE            * 00489**3
*                        (NAME IS 8-BYTE EBCDIC FROM A DESTID CARD    * 00490**3
*    NNNNN(-NMMMM)     -  RANGE OF ALL REMOTES/UNITS AT GIVEN NODE    * 00491**3
*    UNNNN(-UMMMM)     -  RANGE OF UNITS AT THE LOCAL NODE ONLY       * 00492**3
*    RNNNN(-RMMMM)     -  RANGE OF REMOTES AT THE LOCAL NODE ONLY     * 00493**3
*    NAME1(-NAME2)     -  AS ANY ONE OF THE ABOVE, BUT NO OTHERS      * 00494**3
*    LOCAL             -  ALL SPECIAL LOCAL                           * 00495**3
*                                                                     * 00496**3
*********************************************************************** 00497**3
         SPACE 1                                                        00498**3
CLFR     L     R3,0(,R5)           POINT TO OPERAND                     00499**3
         LA    R3,2(,R3)           INCREMENT PAST 'R='                  00500**3
         SLR   R1,R1               SET ZERO LENGTH                      00501**3
         LR    R4,R3               SAVE START OF OPERAND                00502**3
         MVC   DEST1P1,=CL10' '    BLANK DEST1 PART1                    00503**3
         MVC   DEST1P2,=CL10' '    BLANK DEST1 PART2                    00504**3
         MVC   DEST2P1,=CL10' '    BLANK DEST2 PART1                    00505**3
CLFRLOOP CLI   0(R4),C'-'          END OF FIRST OPERAND                 00506**3
         BE    CLFR2               YES, BRANCH                          00507**3
         CLI   0(R4),C','          END OF LAST OPERAND                  00508**3
         BE    CLFR2               YES, BRANCH                          00509**3
         CLI   0(R4),C' '          END OF LAST OPERAND                  00510**3
         BE    CLFR2               YES, BRANCH                          00511**3
         CLI   0(R4),C'.'          TWO PART DESTINATION                 00512**3
         BE    CLFR1               YES, BRANCH                          00513**3
         LA    R4,1(,R4)           INCREMENT TO NEXT CHAR OF DEST       00514**3
         LA    R1,1(,R1)           ADD 1 TO LENGTH                      00515**3
         B     CLFRLOOP            LOOP UNTIL DONE                      00516**3
CLFR1    OI    MISCSW,TWOPART      SET TWO PART DEST INDICATION         00517**3
         CLI   DEST1P1,C' '        HAS FIRST ALREADY BEEN SPECIFIED     00518**3
         BNE   BADOPRND            YES, ERROR                           00519**3
         B     CLFR2               GO PROCESS DEST FIELD                00520**3
CLFR2    LTR   R1,R1               CHECK LENGTH OF DEST                 00521**3
         BZ    BADOPRND            ZERO, ERROR                          00522**3
         CH    R1,=H'10'           CHECK LENGTH OF DEST                 00523**3
         BH    BADOPRND            GREATER THAN 10, ERROR               00524**3
         BCTR  R1,0                MAKE MACHINE LENGTH                  00525**3
         CLI   DEST1P1,C' '        HAS PART1 ALREADY BEEN SPECIFIED     00526**3
         BNE   CLFR3               YES, BRANCH                          00527**3
         EX    R1,MDEST1P1         MOVE DEST1 PART1                     00528**3
         B     CLFR5               GET OUT                              00529**3
CLFR3    TM    MISCSW,TWOPART      SEE IF TWO PART DEST INDICATION      00530**3
         BZ    CLFR4               NO, BRANCH                           00531**3
         CLI   DEST1P2,C' '        SEE IF PART2 ALREADY BEEN SPECIFIED  00532**3
         BNE   CLFR4               YES, THIS IS THE SECOND DEST         00533**3
         EX    R1,MDEST1P2         MOVE DEST1 PART2                     00534**3
         B     CLFR5               GET OUT                              00535**3
CLFR4    CLI   DEST2P1,C' '        SEE IF DEST2 ALREADY BEEN SPECIFIED  00536**3
         BNE   BADOPRND            YES, ERROR                           00537**3
         EX    R1,MDEST2P1         MOVE DEST2 PART1                     00538**3
         B     CLFR5               GET OUT                              00539**3
MDEST1P1 MVC   DEST1P1(0),0(R3)    MOVE DEST1 PART1                     00540**3
MDEST1P2 MVC   DEST1P2(0),0(R3)    MOVE DEST1 PART2                     00541**3
MDEST2P1 MVC   DEST2P1(0),0(R3)    MOVE DEST2 PART1                     00542**3
CLFR5    CLI   0(R4),C'-'          SEE IF DESTINATION RANGE SPECIFIED   00543**3
         BE    CLFR6               YES, BRANCH                          00544**3
         CLI   0(R4),C'.'          SEE IF TWO PART DEST SPECIFIED       00545**3
         BE    CLFR6               YES, BRANCH                          00546**3
         B     CLFR10              GO CONVERT DEST TO ROUTE CODES       00547**3
CLFR6    LA    R4,1(,R4)           INCREMENT PAST '-' OR '.'            00548**3
         LR    R3,R4               SAVE START ADDRESS                   00549**3
         SLR   R1,R1               RESET LENGTH TO ZERO                 00550**3
         B     CLFRLOOP            LOOP FOR NEXT DESTINATION            00551**3
CLFR10   DS    0H                                                       00552**3
         MVC   COMDWORK(2),COMJNOD SET DEFAULT NODE                     00553**3
         $DEST DEST1P1,COMDWORK,LEN=10 CONVERT DEST1 PART1              00554**3
         BZ    BADOPRND            BAD DEST, ERROR                      00555**3
         ST    R1,LOWROUT          SAVE ROUTE CODE                      00556**3
         CLI   DEST1P2,C' '        CHECK IF TWO PART DEST               00557**3
         BE    CLFR12              NO, BRANCH                           00558**3
CLFR11   CLM   R1,B'0011',$ZEROES  SEE IF NODAL DESTINATION ONLY        00559**3
         BNE   BADOPRND            NO, ERROR                            00560**3
         CLM   R1,B'1100',$ZEROES  SEE IF NODE NUMBER SET               00561**3
         BE    BADOPRND            NO, ERROR                            00562**3
         ST    R1,COMDWORK         SET DEFAULT NODE FOR SECOND PART     00563**3
         $DEST DEST1P2,COMDWORK,LEN=10 CONVERT DEST1 PART1              00564**3
         BZ    BADOPRND            BAD DEST, ERROR                      00565**3
         ST    R1,LOWROUT          SAVE ROUTE CODE                      00566**3
         CLM   R1,B'1100',COMDWORK MAKE SURE NODE DEFAULTED             00567**3
         BNE   BADOPRND            NO, ERROR                            00568**3
CLFR12   MVC   HIGHROUT,LOWROUT    SET DEST RANGE TO EQUAL VALUES       00569**3
         CLI   DEST2P1,C' '        WAS DEST RANGE SPECIFIED             00570**3
         BE    CLFR13              NO, BRANCH                           00571**3
         $DEST DEST2P1,COMDWORK,LEN=10 CONVERT DEST2 PART1              00572**3
         BZ    BADOPRND            BAD DEST, ERROR                      00573**3
         ST    R1,HIGHROUT         SAVE ROUTE CODE                      00574**3
CLFR13   CLC   HIGHROUT,LOWROUT    CHECK FOR ASCENDING RANGE            00575**3
         BL    BADOPRND            NO, ERROR                            00576**3
         B     CLFNSPEC            LOOP TO NEXT SPECIFICATION           00577**3
         EJECT                                                          00578**3
*********************************************************************** 00579**3
*                                                                     * 00580**3
*        PROCESS THE SYSOUT CLASS (Q) SUBPARAMETER                    * 00581**3
*                                                                     * 00582**3
*********************************************************************** 00583**3
         SPACE 1                                                        00584**3
CLFQ     L     R1,0(,R5)           POINT TO OPERAND                     00585**3
         LA    R1,2(,R1)           INCREMENT PAST 'Q='                  00586**3
         LR    R14,R1              SAVE CLASS STRING ADDRESS            00587**3
         SLR   R15,R15             SET LENGTH TO ZERO                   00588**3
CLFQ1    CLI   0(R1),C' '          END OF CLASS STRING                  00589**3
         BE    CLFQ2               YES, BRANCH                          00590**3
         CLI   0(R1),C','          END OF CLASS STRING                  00591**3
         BE    CLFQ2               YES, BRANCH                          00592**3
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF CLASS      00593**3
         LA    R15,1(,R15)         ADD 1 TO LENGTH                      00594**3
         B     CLFQ1               LOOP                                 00595**3
CLFQ2    STC   R15,NUMCLASS        SAVE LENGTH                          00596**3
         LTR   R15,R15             TEST LENGTH                          00597**3
         BZ    BADOPRND            ZERO, ERROR                          00598**3
         CH    R15,=H'8'           SEE IF GT 8                          00599**3
         BH    BADOPRND            GREATER THAN 8, ERROR                00600**3
         BCTR  R15,0               MAKE MACHINE LENGTH                  00601**3
         EX    R15,MOVECLAS        SAVE CLASS STRING                    00602**3
         EX    R15,TRTCLASS        TEST CLASSES                         00603**3
         BNZ   BADOPRND            NOT VALID, ERROR                     00604**3
         B     CLFNSPEC            GET NEXT SPECIFICATION               00605**3
MOVECLAS MVC   OUTCLASS(0),0(R14)  MOVE SYSOUT CLASSES TO SAVE          00606**3
TRTCLASS TRT   OUTCLASS(0),CLASSTBL TEST SYSOUT CLASSES                 00607**3
CLASSTBL DC    256X'01'            VALID SYSOUT CLASSES                 00608**3
         ORG   CLASSTBL+C'A'                                            00609**3
         DC    9X'00'              CLASS A-I                            00610**3
         ORG   CLASSTBL+C'J'                                            00611**3
         DC    9X'00'              CLASS J-R                            00612**3
         ORG   CLASSTBL+C'S'                                            00613**3
         DC    8X'00'              CLASS S-Z                            00614**3
         ORG   CLASSTBL+C'0'                                            00615**3
         DC    10X'00'             CLASS 0-9                            00616**3
         DC    6X'01'                                                   00617**3
         EJECT                                                          00618**3
*********************************************************************** 00619**8
*                                                                     * 00620**8
*        PROCESS THE FORMS (F=)  SUBPARAMETER                         * 00621**8
*                                                                     * 00622**8
*********************************************************************** 00623**8
         SPACE 1                                                        00624**8
CLFF     L     R1,0(,R5)           POINT TO OPERAND                     00625**8
         LA    R1,2(,R1)           INCREMENT PAST 'F='                  00626**8
         LR    R14,R1              SAVE FORMS STRING ADDRESS            00627**8
         SLR   R15,R15             SET LENGTH TO ZERO                   00628**8
CLFF1    CLI   0(R1),C' '          END OF CLASS STRING                  00629**8
         BE    CLFF2               YES, BRANCH                          00630**8
         CLI   0(R1),C','          END OF CLASS STRING                  00631**8
         BE    CLFF2               YES, BRANCH                          00632**8
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF CLASS      00633**8
         LA    R15,1(,R15)         ADD 1 TO LENGTH                      00634**8
         B     CLFF1               LOOP                                 00635**8
CLFF2    DS    0H                  SAVE LENGTH                          00636**8
         LTR   R15,R15             TEST LENGTH                          00637**8
         BZ    BADOPRND            ZERO, ERROR                          00638**8
         CH    R15,=H'8'           SEE IF GT 8                          00639**8
         BH    BADOPRND            GREATER THAN 8, ERROR                00640**8
         BCTR  R15,0               MAKE MACHINE LENGTH                  00641**8
         EX    R15,MOVEFORM        MOVE IN FORM (NOTE, INIT BLANK)      00642**8
         B     CLFNSPEC            GET NEXT SPECIFICATION               00643**8
MOVEFORM MVC   SAVEFORM(0),0(R14)                                       00644**8
*********************************************************************** 00645**3
*                                                                     * 00646**3
*        PROCESS THE COMMAND FORMAT (S/L) SUBPARAMETER                * 00647**3
*                                                                     * 00648**3
*********************************************************************** 00649**3
         SPACE 1                                                        00650**3
CLFORM   L     R15,0(,R5)          POINT TO OPERAND                     00651**3
         MVC   FORMAT,0(R15)       SAVE COMMAND FORMAT                  00652**8
         B     CLFNSPEC            GET NEXT SPECIFICATION               00653**3
         EJECT                                                          00654**3
*********************************************************************** 00655**3
*                                                                     * 00656**3
*        GET CHARACTERISTICS JOE AND PREPARE TO SCAN                  * 00657**3
*                                                                     * 00658**3
*********************************************************************** 00659**3
         SPACE 1                                                        00660**3
CLFOK    L     R2,$JOTABLE         GET ADDRESS OF JOT                   00661**3
         USING JOT,R2                                                   00662**3
         L     R4,JOTCHRQ-(JOENEXT-JOE) QUEUE HEAD                      00663**3
         USING JOE,R4                                                   00664**3
         N     R4,$ZEROFFF         ANY JOES?                            00665**3
         BZ    ENDJOES             NO, SKIP JOE PROCESSING              00666**3
*        ST    R4,JOEADDR          SAVE STARTING POINT                  00667**3
         MVC   MESSAGE(90),INITRESP INITIALIZE RESPONSE BUFFER          00668**3
         B     CHARJOES            BYPASS DC                            00669**3
INITRESP DS    0CL90                                                    00670**3
         DC    CL46'JJJJJJJJ JOBNNNN RRRRRRRR F=FFFFFFFF NNNNNNNNN'     00671**8
         DC    CL46'         Q=Q     C=CCCC T=TTTT O=OOOO B=B HHHH'     00672**8
         SPACE 1                                                        00673**3
CHARJOES DS    0H                                                       00674**3
         ALR   R4,R2               CALCULATE ACTUAL JOE ADDRESS         00675**3
         ST    R4,JOEADDR          SAVE NEW CHARACTERISTICS JOE ADDR    00676**3
*********************************************************************** 00677**3
*        MOVE THE FORM NUMBER TO THE MESSAGE                          * 00678**3
*********************************************************************** 00679**3
         MVC   OFORM,JOEFORM       MOVE FORM TO MESSAGE                 00680**3
*********************************************************************** 00681*10
*        CHECK THE FORM FOR OUR VALUE                                 * 00682*10
*********************************************************************** 00683*10
CKFORM   CLI   SAVEFORM,C' '       DO WE WANT ALL FORMS         ?       00684*10
         BE    CKDMNDFM            YES, BRANCH                          00685*10
         CLC   OFORM,SAVEFORM      IS OUTPUT FORM OURFORM               00686*10
         BNE   ENDCHAR             NO, GET NEXT JOE                     00687*12
CKDMNDFM DS    0H                                                       00688*10
         TM    JOEFLAGD,JOEFDFMS   DEMAND SETUP?                        00689**3
         BZ    CHARFCB             NO, CONTINUE                         00690**3
         MVC   OFORM+4(4),=C'DMND'   YES, PUT IN MSG                    00691**8
*********************************************************************** 00692**3
*        MOVE THE FCB  NUMBER TO THE MESSAGE                          * 00693**3
*********************************************************************** 00694**3
CHARFCB  MVC   OFCB,JOEFCB         MOVE FCB  TO MESSAGE                 00695**3
         TM    JOEFLAGD,JOEFDFCB   DEMAND SETUP?                        00696**3
         BZ    CHARUCS             NO, CONTINUE                         00697**3
         MVC   OFCB(4),=C'DMND'    YES, PUT IN MSG                      00698**3
*********************************************************************** 00699**3
*        MOVE THE UCS  NUMBER TO THE MESSAGE                          * 00700**3
*********************************************************************** 00701**3
CHARUCS  MVC   OUCS,JOEUCS         MOVE UCS  TO MESSAGE                 00702**3
         TM    JOEFLAGD,JOEFDUCS   DEMAND SETUP?                        00703**3
         BZ    CHAROVL             NO, CONTINUE                         00704**3
         MVC   OUCS(4),=C'DMND'    YES, PUT IN MSG                      00705**3
*********************************************************************** 00706**3
*        MOVE THE OVLY NUMBER TO THE MESSAGE                          * 00707**3
*********************************************************************** 00708**3
CHAROVL  MVC   OOVLY,JOEFLASH      MOVE OVLY TO MESSAGE                 00709**3
*********************************************************************** 00710**3
*        MOVE THE BURST INDICATOR TO THE MESSAGE                      * 00711**3
*********************************************************************** 00712**3
         MVI   OBURST,C'N'         ASSUME BURST=NO                      00713**3
         TM    JOEFLAGC,JOEFCBRT   IS THIS BURST=YES                    00714**3
         BZ    NOBURST             NO, BRANCH                           00715**3
         MVI   OBURST,C'Y'         SET BURST=YES                        00716**3
NOBURST  DS    0H                                                       00717**3
         EJECT                                                          00718**3
*********************************************************************** 00719**3
*                                                                     * 00720**3
*        SCAN WORK JOES AND JQES FOR MATCH ON DEST AND/OR JOB         * 00721**3
*                                                                     * 00722**3
*********************************************************************** 00723**3
         SPACE 1                                                        00724**3
*        LA    R4,JOEWKPTR-(JOECHNXT-JOE)  TRICKY START OF WRK QUE      00725**3
         L     R4,JOEWKPTR               NOT SO TRICKY START OF WRK QUE 00726**3
         N     R4,$ZEROFFF               TURN OFF HIGH BYTE             00727**3
WORKJOES DS    0H                                                       00728**3
         ALR   R4,R2               COMPUTE WORK JOE ADDRESS             00729**3
*********************************************************************** 00730**3
*        CHECK THE DESTINATION FOR OUR VALUES                         * 00731**3
*********************************************************************** 00732**3
         CLC   JOEROUT,LOWROUT     SEE IF LT OUR LOWER ROUTE CODE       00733**3
         BL    ENDWORK             NO, BRANCH                           00734**3
         CLC   JOEROUT,HIGHROUT    SEE IF GT OUR HIGHER ROUTE CODE      00735**3
         BH    ENDWORK             YES, BRANCH                          00736**3
*********************************************************************** 00737**8
*        CHECK THE SYSOUT CLASS FOR OUR VALUE                         * 00738**8
*********************************************************************** 00739**8
CKCLASS  CLI   OUTCLASS,C'*'       DO WE WANT ALL SYSOUT CLASSES?       00740**8
         BE    GOODCLAS            YES, BRANCH                          00741**8
         SLR   R1,R1               CLEAR REG FOR IC                     00742**8
         IC    R1,NUMCLASS         LOAD NUMBER OF OUTPUT CLASSES        00743**8
         LA    R15,OUTCLASS        LOAD ADDRESS OF CLASS TABLE          00744**3
CKCLASS1 CLC   JOECURCL,0(R15)     IS THIS THE CORRECT SYSOUT CLASS     00745**3
         BE    GOODCLAS            YES, BRANCH                          00746**3
         LA    R15,1(,R15)         INCREMENT TO NEXT CLASS ENTRY        00747**3
         BCT   R1,CKCLASS1         LOOP                                 00748**3
         B     ENDWORK             CLASS MISMATCH, BYPASS THIS JOE      00749**3
         SPACE 1                                                        00750**3
GOODCLAS L     R3,JOEJQE           GET JQE OFFSET                       00751**3
         N     R3,$ZEROFFF         CLEAR THE HI-ORDER BYTE              00752**3
         AL    R3,$JOBQPTR         CONVERT THE OFFSET TO ADDRESS        00753**3
         USING JQE,R3              SET ADDRESSABILITY TO JQE            00754**3
*********************************************************************** 00755**3
*        CHECK THE JOB NUMBER FOR OUR VALUES                          * 00756**3
*********************************************************************** 00757**3
         CLI   JTYPE,C'*'          WANT ALL JOB NUMBERS?                00758*10
         BE    CKJOBPFX            YES, BRANCH                          00759*10
CKBATCH  CLI   JTYPE,C'J'          WANT BATCH JOBS?                     00760**3
         BNE   CKSTC               NO, BRANCH                           00761**3
         TM    JQEFLAG3,JQE3JOB    IS THIS A BATCH JOB                  00762**3
         BZ    GOODTYPE            YES, BRANCH                          00763**3
         B     ENDWORK             NO, IGNORE THIS JOE                  00764**3
CKSTC    CLI   JTYPE,C'S'          WANT STARTED TASKS?                  00765**3
         BNE   CKTSU               NO, BRANCH                           00766**3
         TM    JQEFLAG3,JQE3STC    IS THIS A STARTED TASK               00767**3
         BO    GOODTYPE            YES, BRANCH                          00768**3
         B     ENDWORK             NO, IGNORE THIS JOE                  00769**3
CKTSU    CLI   JTYPE,C'T'          WANT TSO USERS?                      00770**3
         BNE   ENDWORK             NO, UNKNOWN REQUEST, GET OUT         00771**3
         TM    JQEFLAG3,JQE3TSU    IS THIS A TSO USER                   00772**3
         BNO   ENDWORK             NO, IGNORE THIS JOE                  00773**3
GOODTYPE CLC   JQEJOBNO,LOWJOB     SEE IF LT OUR LOWER JOB NUMBER       00774**3
         BL    ENDWORK             NO, IGNORE THIS JOE                  00775**3
         CLC   JQEJOBNO,HIGHJOB    SEE IF GT OUR HIGHER JOB NUMBER      00776**3
         BH    ENDWORK             YES, IGNORE THIS JOE                 00777**3
*********************************************************************** 00778**3
*        MOVE THE JOBNAME TO THE MESSAGE                              * 00779**3
*********************************************************************** 00780**3
CKJOBPFX DS    0H                                                       00781*11
         CLI   NAMEPRFX,C' '       IS THIS LIMITED BY NAME PREFIX       00782*10
         BE    GOODJOB             EQUAL, NOT LIMITED BY NAME PREFIX    00783*10
         SLR   R1,R1               ZERO OUT R1                          00784*10
         IC    R1,CMPRSIZ          GET SIZE OF COMPARE                  00785*10
         EX    R1,PRFXCMPR         EXECUTE COMPARE                      00786*10
         BNE   ENDWORK             IF NAME PREFIX NOT EQUAL, LOOP NEXT  00787*10
GOODJOB  DS    0H                                                       00788*11
         MVC   OJNAME,JQEJNAME     MOVE JOBNAME TO MESSAGE              00789*10
*********************************************************************** 00790**3
*        MOVE THE JOB NUMBER TO THE MESSAGE                           * 00791**3
*********************************************************************** 00792**3
         LH    R0,JQEJOBNO         LOAD JOB NUMBER                      00793**3
         CVD   R0,$DOUBLE          CONVERT JOB NUMBER TO PACKED         00794**3
         MVC   OJOBNO+2(6),=X'402020202120' SET EDIT MASK               00795**3
         ED    OJOBNO+2(6),$DOUBLE+5  UNPACK JOB NUMBER TO MESSAGE      00796**3
         MVC   OJOBNO+1(3),=C'JOB' ASSUME BATCH JOB                     00797**3
         TM    JQEFLAG3,JQE3JOB    IS THIS A BATCH JOB                  00798**3
         BZ    GOODJNO             YES, BRANCH                          00799**3
         MVC   OJOBNO+1(3),=C'STC' ASSUME STARTED TASK                  00800**3
         TM    JQEFLAG3,JQE3STC    IS THIS A STARTED TASK               00801**3
         BO    GOODJNO             YES, BRANCH                          00802**3
         MVC   OJOBNO+1(3),=C'TSU' ASSUME TSO LOGON                     00803**3
         TM    JQEFLAG3,JQE3TSU    IS THIS A TSO LOGON                  00804**3
         BO    GOODJNO             YES, BRANCH                          00805**3
         MVC   OJOBNO+1(3),=C'XMT' ASSUME TRANSMITTER                   00806**3
GOODJNO  DS    0H                                                       00807**3
*********************************************************************** 00808**3
*        SET THE BUSY INDICATOR IN THE MESSAGE                        * 00809**3
*********************************************************************** 00810**3
         MVI   OBUSYIND,C' '       BLANK THE BUSY INDICATOR             00811**3
         TM    JOEFLAG1,JOE1BUSY   SEE IF BEING PRINTED/PUNCHED         00812**3
         BZ    NOTBUSY             NO, BRANCH                           00813**3
         MVI   OBUSYIND,C'*'       SET THE BUSY INDICATOR               00814**3
NOTBUSY  DS    0H                                                       00815**3
*********************************************************************** 00816**3
*        MOVE THE SYSOUT CLASS TO THE MESSAGE                         * 00817**3
*********************************************************************** 00818**3
         MVC   OCLASS,JOECURCL     MOVE SYSOUT CLASS TO MESSAGE         00819**3
*********************************************************************** 00820**3
*        SET THE HOLD INDICATOR IN THE MESSAGE                        * 00821**3
*********************************************************************** 00822**3
         MVC   OHOLDIND,=C'    '   RESET HOLD INDICATOR                 00823**3
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1 IS THIS JOB HELD              00824**3
         BZ    HOLDSET             NO, BRANCH                           00825**3
         MVC   OHOLDIND,=C'HOLD'   SET HOLD INDICATOR                   00826**3
         B     NSELSET             NO, BRANCH                           00827**3
HOLDSET  DS    0H                                                       00828**3
*********************************************************************** 00829**3
*        SET THE NON-SELECTABLE INDICATOR IN THE MESSAGE              * 00830**3
*********************************************************************** 00831**3
         TM    JOEFLAG2,JOE2SLEC   IS THIS JOE SELECTABLE               00832**3
         BZ    NSELSET             YES, BRANCH                          00833**3
         MVC   OHOLDIND,=C'NSEL'   SET NON-SELECTABLE INDICATOR         00834**3
NSELSET  DS    0H                                                       00835**3
*********************************************************************** 00836**3
*        SET THE DESTINATION VALUE IN THE MESSAGE                     * 00837**3
*********************************************************************** 00838**3
CNVDEST  LA    R1,COMEWORK         POINT TO OUTPUT AREA                 00839**3
         MVC   0(12,R1),=CL12' R'  ASSUME ' RJ2XIT05X      '            00840**3
         SLR   R0,R0               CLEAR REG FOR ICM                    00841**3
         CLC   $OWNNODE,JOEROUT    IS THIS OUR NODE                     00842**3
         BE    CNVDEST1            YES, NO NODE NUMBERS                 00843**3
         MVI   1(R1),C'N'          ASSUME NODE SPECIFICATION            00844**3
         ICM   R0,B'0011',JOEROUT  LOAD NODE NUMBER                     00845**3
         BNZ   CNVDEST2            NODE NUMBER NOT ZERO, CONVERT IT     00846**3
         MVI   1(R1),C'U'          ELSE MUST BE SPECIAL UNIT            00847**3
CNVDEST1 ICM   R0,B'0011',JOEROUT+2 LOAD REMOTE NUMBER                  00848**3
         BNZ   CNVDEST2            REMOTE NUMBER NOT ZERO, CONVERT IT   00849**3
         MVC   1(5,R1),=C'LOCAL'   ZERO, SET TO LOCAL                   00850**3
         B     CNVDEST6            AND GET OUT                          00851**3
         SPACE 1                                                        00852**3
CNVDEST2 CVD   R0,$DOUBLE          CONVERT NODE/RMT NUMBER TO PACKED    00853**3
         UNPK  2(5,R1),$DOUBLE     UNPACK NODE/RMT NUMBER               00854**3
         OI    6(R1),X'F0'         MAKE NODE/RMT NUMBER PRINTABLE       00855**3
CNVDEST3 CLI   2(R1),C'0'          IS HIGH BYTE ZERO                    00856**3
         BNE   CNVDEST4            NO, GO SEE IF DONE                   00857**3
         MVC   2(5,R1),3(R1)       SHIFT OFF HIGH ORDER ZERO BYTE       00858**3
         B     CNVDEST3            LOOP UNTIL LEADING ZEROS GONE        00859**3
CNVDEST4 CLI   1(R1),C'N'          SEE IF NODE SPECIFIED                00860**3
         BNE   CNVDEST6            NO, DONE                             00861**3
         ICM   R0,B'0011',JOEROUT+2 LOAD REMOTE NUMBER                  00862**3
         BZ    CNVDEST6            ZERO, EXIT                           00863**3
CNVDEST5 LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER          00864**3
         CLI   1(R1),C' '          END OF NODE NUMBER?                  00865**3
         BNE   CNVDEST5            NO, CONTINUE                         00866**3
         MVI   1(R1),C'R'          SETUP FOR REMOTE NUMBER              00867**3
         B     CNVDEST2            GO CONVERT REMOTE NUMBER             00868**3
         SPACE 1                                                        00869**3
CNVDEST6 MVC   ODEST,COMEWORK      MOVE CONVERTED DEST TO MESSAGE       00870**3
         EJECT                                                          00871**3
*********************************************************************** 00872**3
*        SET THE OUTPUT LINE COUNT IN THE MESSAGE                     * 00873**3
*********************************************************************** 00874**3
         L     R1,JOERECCT         LOAD THE SYSOUT RECORD COUNT         00875**3
         CVD   R1,$DOUBLE          CONVERT TO PACKED                    00876**3
         MVC   OQTY,=X'40202020202020202120' SET EDIT MASK              00877**3
         ED    OQTY,$DOUBLE+3      EDIT SYSOUT RECORD COUNT TO MESSAGE  00878**3
*********************************************************************** 00879**3
*                                                                     * 00880**3
*        WRITE THE MESSAGE FOR THIS JOE                               * 00881**3
*                                                                     * 00882**3
*********************************************************************** 00883**3
         LA    R0,46               WRITE FIRST MESSAGE                  00884**3
         LA    R1,MSG1             LOAD ADDRESS OF MESSAGE              00885**3
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE               00886**3
         CLI   FORMAT,C'S'         IS THIS THE SHORT FORM               00887**3
         BE    SETFND              YES, BRANCH                          00888**3
         LA    R0,46               SET TO LONG FORM LENGTH              00889**3
         LA    R1,MSG2             LOAD ADDRESS OF MESSAGE              00890**3
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE               00891**3
SETFND   OI    MISCSW,MATCH        TURN ON MATCH FOUND SWITCH           00892**3
         B     ENDWORK             GO GET ANOTHER WORK JOE              00893**3
         EJECT                                                          00894**3
ENDWORK  DS    0H                                                       00895**3
         L     R4,JOECHNXT         GET OFFSET OF NEXT WORK JOE          00896**3
         N     R4,$ZEROFFF         IS THIS THE END OF THE WORK JOES     00897**3
         BZ    ENDCHAR             YES, BRANCH TO GET NEXT CHAR JOE     00898**3
         B     WORKJOES            NO, PROCESS NEXT ONE                 00899**3
         EJECT                                                          00900**3
ENDCHAR  DS    0H                                                       00901**3
         L     R4,JOEADDR          GET PREV CHARACTERISTICS JOE ADDR    00902**3
         L     R4,JOENEXT          POINT TO NEXT CHARACTERISTICS JOE    00903**3
         N     R4,$ZEROFFF         IS THIS THE END OF THE JOE CHAIN     00904**3
         BZ    ENDJOES             YES, EXIT                            00905**3
         B     CHARJOES            NO, PROCESS NEXT ONE                 00906**3
         EJECT                                                          00907**3
*********************************************************************** 00908**3
*                                                                     * 00909**3
*        END OF ALL JOES.  IF NO MESSAGES WERE ISSUED, ISSUE          * 00910**3
*        A MESSAGE THAT NO OUTPUT WAS QUEUED.                         * 00911**3
*                                                                     * 00912**3
*********************************************************************** 00913**3
ENDJOES  TM    MISCSW,MATCH        WAS A MATCH FOUND                    00914**3
         BZ    NOUTPUT             NO, BRANCH                           00915**3
         B     EXIT8               GET OUT                              00916**3
NOUTPUT  $CWTO MSG='NO OUTPUT QUEUED',MSGID=919  ISSUE MESSAGE          00917**3
         B     EXIT8               GET OUT                              00918**3
         SPACE 1                                                        00919**3
*********************************************************************** 00920**3
*                                                                     * 00921**3
*        INVALID $LF OPERAND                                          * 00922**3
*                                                                     * 00923**3
*********************************************************************** 00924**3
         SPACE 1                                                        00925**3
BADOPRND L     R1,0(0,R5)          POINT TO INVALID OPERAND             00926**3
         MVC   COMMAND(9),0(R1)    MOVE 9 CHARACTERS OF OPERAND TO MSG  00927**3
         MVC   COMMAND+9(16),=C' INVALID OPERAND' SET ERROR MSG         00928**3
         LA    R0,25               SET MESSAGE LENGTH                   00929**3
         $CWTO L=(R0),MSGID=950    WRITE ERROR MESSAGE                  00930**3
         B     EXIT8               GET OUT                              00931**3
PRFXCMPR CLC   NAMEPRFX(0),JQEJNAME EXECUTED COMPARE OF JOB NM PREFIX   00932*10
         EJECT                                                          00933**3
*********************************************************************** 00934**3
*                                                                     * 00935**3
*                    E X I T     R O U T I N E S                      * 00936**3
*                                                                     * 00937**3
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                * 00938**3
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        * 00939**3
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      * 00940**3
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 * 00941**3
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            * 00942**3
*                                                                     * 00943**3
*********************************************************************** 00944**3
EXIT0    DS    0H                                                       00945**3
         LA    R15,0               SET RETURN CODE TO 0                 00946**3
         B     $LFEXIT             RETURN TO MAIN ROUTINE               00947**3
         SPACE 3                                                        00948**3
EXIT8    DS    0H                                                       00949**3
         LA    R15,8               SET RETURN CODE TO 8                 00950**3
         SPACE 3                                                        00951**3
$LFEXIT  DS    0H                                                       00952**3
         L     R8,$LFSAVE          RESTORE BAL REGISTER                 00953**3
         BR    R8                  RETURN TO MAIN ROUTINE               00954**3
         EJECT                                                          00955**3
         LTORG                                                          00956**3
         EJECT                                                          00957**3
$LFWORK  DS    0F                  COMMAND WORK AREA                    00958**3
JOEADDR  DS    F                   REGISTER SAVE AREA                   00959**3
JTYPE    DS    C                   JOB TYPE (* OR JQEFLAG VALUE)        00960**3
FORMAT   DS    C                   DISPLAY FORMAT (S / L)               00961**3
MISCSW   DS    X                   MISCELLANEOUS SWITCHES               00962**3
TWOPART  EQU   X'80'               TWO PART DESTINATION SPECIFIED       00963**3
MATCH    EQU   X'40'               MATCH FOR OUTPUT FOUND               00964**3
NUMCLASS DS    X                   NUMBER OF OUTPUT CLASSES FOLLOWING   00965**3
OUTCLASS DS    CL8                 JOB OUTPUT CLASS / *                 00966**3
SAVEFORM DS    CL8                 SAVE FORM IT                         00967**8
CMPRSIZ  DS    X                   MACHINE LENGTH FOR PRFX CMPR INS.    00968*10
NAMEPRFX DS    CL8                 NAME PREFIX                          00969*10
LOWJOB   DS    H                   LOW JOB NUMBER FOR SEARCH            00970**3
HIGHJOB  DS    H                   HIGH JOB NUMBER FOR SEARCH           00971**3
LOWROUT  DS    F                   LOW ROUTE CODE FOR SEARCH            00972**3
HIGHROUT DS    F                   HIGH ROUTE CODE FOR SEARCH           00973**3
DEST1P1  DS    CL10                BEGINNING DEST PART 1                00974**3
DEST1P2  DS    CL10                BEGINNING DEST PART 2                00975**3
DEST2P1  DS    CL10                ENDING DEST PART 1                   00976**3
MESSAGE  DS    CL100               MESSAGE WORK AREA                    00977**3
WORKLEN  EQU   *-$LFWORK           LENGTH OF WORK AREA                  00978**3
*                                                                       00979**3
MSG1     EQU   MESSAGE             FIRST MESSAGE                        00980**3
OJNAME   EQU   MESSAGE,8           OUTPUT JOBNAME                       00981*10
OBUSYIND EQU   MESSAGE+8,1         OUTPUT BUSY (PRINTING/PUNCHING)      00982**3
OJOBNO   EQU   MESSAGE+8,8         OUTPUT JOB NUMBER                    00983**3
ODEST    EQU   MESSAGE+16,10       OUTPUT DESTINATION                   00984**3
OFORM    EQU   MESSAGE+28,8        OUTPUT FORM                          00985**8
OQTY     EQU   MESSAGE+36,10       OUTPUT NUMBER OF LINES/CARDS         00986**3
MSG2     EQU   MESSAGE+46          FIRST MESSAGE                        00987**3
OCLASS   EQU   MESSAGE+57,1        OUTPUT CLASS                         00988**8
OFCB     EQU   MESSAGE+65,4        OUTPUT FCB                           00989**3
OUCS     EQU   MESSAGE+72,4        OUTPUT UCS                           00990**3
OOVLY    EQU   MESSAGE+79,4        OUTPUT OVERLAY                       00991**3
OBURST   EQU   MESSAGE+86,1        OUTPUT BURST INDICATOR               00992**3
OHOLDIND EQU   MESSAGE+88,4        OUTPUT HOLD INDICATOR                00993**3
         EJECT                                                          00994**3
         SPACE 3                                                        00995**3
*             CLASS IN MSG BELOW WILL BE REPLACED BY L OR F             00996**3
* $TPRTMSG DC C'PLEASE REENTER THE COMMAND WITHOUT CLASS X'             00997**4
* $TPRTEMS DC C'CLASS E ONLY GOES ON PRINTER12'                         00998**4
PWDMISS  DC C'PLEASE REENTER THE COMMAND WITH THE PASSWORD'             00999**3
PWDWRONG DC C'INVALID PASSWORD'                                         01000**3
         LTORG                                                          01001**3
         EJECT                                                          01002**3
         $MODEND                                                        01003**3
         END                                                            01004**3
